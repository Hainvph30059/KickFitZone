// <auto-generated />
using System;
using APP_DATA.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APP_DATA.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20240523070922_Data_Test_v1")]
    partial class Data_Test_v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("APP_DATA.Entity.Address", b =>
                {
                    b.Property<Guid>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Commune")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DistrictCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsDefaultAddress")
                        .HasColumnType("bit");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ShippingCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WardCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("AddressID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressID = new Guid("046f153b-d58a-4cef-b6f5-e17d0a83de99"),
                            Commune = "Commune 1",
                            CustomerID = new Guid("e57b1ee4-a901-410d-bdbe-2d6d146579f4"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2777),
                            District = "District 1",
                            DistrictCode = "D1",
                            IsDefaultAddress = true,
                            Province = "Province 1",
                            ShippingCost = 10m,
                            Status = "Active",
                            Street = "Street 1",
                            WardCode = "W1"
                        },
                        new
                        {
                            AddressID = new Guid("7a10de1b-7ced-40a1-b350-22b578699bbd"),
                            Commune = "Commune 2",
                            CustomerID = new Guid("beb23968-4803-439f-a66c-16af00ca3a06"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2794),
                            District = "District 2",
                            DistrictCode = "D2",
                            IsDefaultAddress = false,
                            Province = "Province 2",
                            ShippingCost = 20m,
                            Status = "Active",
                            Street = "Street 2",
                            WardCode = "W2"
                        },
                        new
                        {
                            AddressID = new Guid("8a30df15-c1f2-42d7-bf87-21161879ede7"),
                            Commune = "Commune 3",
                            CustomerID = new Guid("7e95ffd5-df8a-4eed-8998-6c22a91caa48"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2797),
                            District = "District 3",
                            DistrictCode = "D3",
                            IsDefaultAddress = true,
                            Province = "Province 3",
                            ShippingCost = 30m,
                            Status = "Active",
                            Street = "Street 3",
                            WardCode = "W3"
                        },
                        new
                        {
                            AddressID = new Guid("f2bf807d-8f06-4c67-8ee5-9e5ce95a13d3"),
                            Commune = "Commune 4",
                            CustomerID = new Guid("2db21e69-cc89-45c5-8de5-2893ab10277f"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2800),
                            District = "District 4",
                            DistrictCode = "D4",
                            IsDefaultAddress = false,
                            Province = "Province 4",
                            ShippingCost = 40m,
                            Status = "Active",
                            Street = "Street 4",
                            WardCode = "W4"
                        },
                        new
                        {
                            AddressID = new Guid("2075e02d-9c0f-4d7c-9f66-636525b82cd1"),
                            Commune = "Commune 5",
                            CustomerID = new Guid("e0285d6e-78eb-4275-a67a-22515dcec565"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2802),
                            District = "District 5",
                            DistrictCode = "D5",
                            IsDefaultAddress = true,
                            Province = "Province 5",
                            ShippingCost = 50m,
                            Status = "Active",
                            Street = "Street 5",
                            WardCode = "W5"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Bill", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BillCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CancelDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ConfirmationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentDay")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PurchaseMethodID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ShippingCosts")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("SuccessDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPriceAfterDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VoucherID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("PurchaseMethodID");

                    b.HasIndex("VoucherID");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            ID = new Guid("4b267549-53f5-4143-85dd-4508bbc92cf0"),
                            BillCode = "B1",
                            ConfirmationDate = new DateTime(2024, 5, 23, 8, 9, 20, 889, DateTimeKind.Utc).AddTicks(3022),
                            CustomerID = new Guid("e57b1ee4-a901-410d-bdbe-2d6d146579f4"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3015),
                            DeliveryDate = new DateTime(2024, 5, 25, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3021),
                            EmployeeID = new Guid("b1f6048c-8d34-4aaf-a30a-01afb06c1046"),
                            IsPaid = true,
                            Note = "Note 1",
                            PaymentDay = new DateTime(2024, 5, 23, 10, 9, 20, 889, DateTimeKind.Utc).AddTicks(3024),
                            PurchaseMethodID = new Guid("e9aeca0c-9123-4fd5-9f40-84916947dd57"),
                            ShippingCosts = 50m,
                            Status = "Delivered",
                            SuccessDate = new DateTime(2024, 5, 24, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3016),
                            TotalPrice = 1000m,
                            TotalPriceAfterDiscount = 950m,
                            TransactionType = "Credit",
                            UpdateDate = new DateTime(2024, 5, 23, 9, 9, 20, 889, DateTimeKind.Utc).AddTicks(3023),
                            VoucherID = new Guid("6e012097-4f27-41cd-8778-8c1d835ca77a")
                        },
                        new
                        {
                            ID = new Guid("28364be2-a65b-4fc1-aad7-8dccc9bbd448"),
                            BillCode = "B2",
                            ConfirmationDate = new DateTime(2024, 5, 23, 8, 9, 20, 889, DateTimeKind.Utc).AddTicks(3035),
                            CustomerID = new Guid("beb23968-4803-439f-a66c-16af00ca3a06"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3033),
                            DeliveryDate = new DateTime(2024, 5, 25, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3034),
                            EmployeeID = new Guid("e54f69ea-4917-479d-8054-c3bd13457b4c"),
                            IsPaid = true,
                            Note = "Note 2",
                            PaymentDay = new DateTime(2024, 5, 23, 10, 9, 20, 889, DateTimeKind.Utc).AddTicks(3036),
                            PurchaseMethodID = new Guid("9ebd0022-01d3-4c80-9563-ecb38251f56d"),
                            ShippingCosts = 100m,
                            Status = "Delivered",
                            SuccessDate = new DateTime(2024, 5, 24, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3034),
                            TotalPrice = 2000m,
                            TotalPriceAfterDiscount = 1900m,
                            TransactionType = "Credit",
                            UpdateDate = new DateTime(2024, 5, 23, 9, 9, 20, 889, DateTimeKind.Utc).AddTicks(3036),
                            VoucherID = new Guid("3a72329e-37ae-43aa-ab33-223b82131d4f")
                        },
                        new
                        {
                            ID = new Guid("a7f28647-512e-4273-a96a-9722fb161072"),
                            BillCode = "B3",
                            ConfirmationDate = new DateTime(2024, 5, 23, 8, 9, 20, 889, DateTimeKind.Utc).AddTicks(3041),
                            CustomerID = new Guid("7e95ffd5-df8a-4eed-8998-6c22a91caa48"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3040),
                            DeliveryDate = new DateTime(2024, 5, 25, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3040),
                            EmployeeID = new Guid("cdb4cd64-5203-47f5-b435-da340b5d8988"),
                            IsPaid = true,
                            Note = "Note 3",
                            PaymentDay = new DateTime(2024, 5, 23, 10, 9, 20, 889, DateTimeKind.Utc).AddTicks(3042),
                            PurchaseMethodID = new Guid("b3ea1118-ae19-4c05-8c4f-e3841f35691c"),
                            ShippingCosts = 150m,
                            Status = "Delivered",
                            SuccessDate = new DateTime(2024, 5, 24, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3040),
                            TotalPrice = 3000m,
                            TotalPriceAfterDiscount = 2850m,
                            TransactionType = "Credit",
                            UpdateDate = new DateTime(2024, 5, 23, 9, 9, 20, 889, DateTimeKind.Utc).AddTicks(3042),
                            VoucherID = new Guid("2fa517bd-0f4d-4315-8a60-d3a3f50f7c67")
                        },
                        new
                        {
                            ID = new Guid("4df74ef5-e366-4e35-8ddf-d4886e4518d5"),
                            BillCode = "B4",
                            ConfirmationDate = new DateTime(2024, 5, 23, 8, 9, 20, 889, DateTimeKind.Utc).AddTicks(3046),
                            CustomerID = new Guid("2db21e69-cc89-45c5-8de5-2893ab10277f"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3045),
                            DeliveryDate = new DateTime(2024, 5, 25, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3045),
                            EmployeeID = new Guid("b46cea3b-a766-4980-a82f-3c8dde26a234"),
                            IsPaid = true,
                            Note = "Note 4",
                            PaymentDay = new DateTime(2024, 5, 23, 10, 9, 20, 889, DateTimeKind.Utc).AddTicks(3047),
                            PurchaseMethodID = new Guid("4ec57afa-f317-4aae-939f-82092b7f47b5"),
                            ShippingCosts = 200m,
                            Status = "Delivered",
                            SuccessDate = new DateTime(2024, 5, 24, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3045),
                            TotalPrice = 4000m,
                            TotalPriceAfterDiscount = 3800m,
                            TransactionType = "Credit",
                            UpdateDate = new DateTime(2024, 5, 23, 9, 9, 20, 889, DateTimeKind.Utc).AddTicks(3046),
                            VoucherID = new Guid("c9e42695-d9ab-466c-a23b-6ec49aa3f4fb")
                        },
                        new
                        {
                            ID = new Guid("9b901a47-24a8-4a33-85ba-53553802fe79"),
                            BillCode = "B5",
                            ConfirmationDate = new DateTime(2024, 5, 23, 8, 9, 20, 889, DateTimeKind.Utc).AddTicks(3051),
                            CustomerID = new Guid("e0285d6e-78eb-4275-a67a-22515dcec565"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3050),
                            DeliveryDate = new DateTime(2024, 5, 25, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3050),
                            EmployeeID = new Guid("b0880b58-0326-4410-9be3-b3430a9b0b4a"),
                            IsPaid = true,
                            Note = "Note 5",
                            PaymentDay = new DateTime(2024, 5, 23, 10, 9, 20, 889, DateTimeKind.Utc).AddTicks(3052),
                            PurchaseMethodID = new Guid("10451571-ce23-44aa-905a-e85f09dca9b9"),
                            ShippingCosts = 250m,
                            Status = "Delivered",
                            SuccessDate = new DateTime(2024, 5, 24, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3050),
                            TotalPrice = 5000m,
                            TotalPriceAfterDiscount = 4750m,
                            TransactionType = "Credit",
                            UpdateDate = new DateTime(2024, 5, 23, 9, 9, 20, 889, DateTimeKind.Utc).AddTicks(3051),
                            VoucherID = new Guid("c7feac47-13ae-47bb-a192-b04d147766a8")
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.BillDetails", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("ShoesDetails_SizeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("BillID");

                    b.ToTable("BillDetails");

                    b.HasData(
                        new
                        {
                            ID = new Guid("6d70bb19-4161-43fc-9c37-cff08164dffc"),
                            BillID = new Guid("4b267549-53f5-4143-85dd-4508bbc92cf0"),
                            Price = 1000m,
                            Quantity = 1,
                            ShoesDetails_SizeID = new Guid("58eae792-ff6a-4d0c-bab0-e316c21c12a3"),
                            Status = "Delivered"
                        },
                        new
                        {
                            ID = new Guid("025c59e9-e21a-47e4-828f-ee88e66431d9"),
                            BillID = new Guid("28364be2-a65b-4fc1-aad7-8dccc9bbd448"),
                            Price = 2000m,
                            Quantity = 2,
                            ShoesDetails_SizeID = new Guid("081bbc13-e243-4881-bd89-cb630bd7d75c"),
                            Status = "Delivered"
                        },
                        new
                        {
                            ID = new Guid("790f4e27-344a-4c11-a3f9-3cd89d9b05b0"),
                            BillID = new Guid("a7f28647-512e-4273-a96a-9722fb161072"),
                            Price = 3000m,
                            Quantity = 3,
                            ShoesDetails_SizeID = new Guid("e0b5fcbd-ffca-4fa0-8cfc-da2d14b60a94"),
                            Status = "Delivered"
                        },
                        new
                        {
                            ID = new Guid("26f127f5-046b-4dcf-a810-04e8531f9b15"),
                            BillID = new Guid("4df74ef5-e366-4e35-8ddf-d4886e4518d5"),
                            Price = 4000m,
                            Quantity = 4,
                            ShoesDetails_SizeID = new Guid("2208900f-a6ae-457a-8cc2-97e4aaa686e2"),
                            Status = "Delivered"
                        },
                        new
                        {
                            ID = new Guid("4c6b84c8-1c6d-4a9b-864e-cbb2436aa963"),
                            BillID = new Guid("9b901a47-24a8-4a33-85ba-53553802fe79"),
                            Price = 5000m,
                            Quantity = 5,
                            ShoesDetails_SizeID = new Guid("887f2cbf-b35c-4ea8-9ac2-91871ac785ea"),
                            Status = "Delivered"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.BillStatusHistory", b =>
                {
                    b.Property<Guid>("BillStatusHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BillStatusHistoryID");

                    b.HasIndex("BillID");

                    b.ToTable("BillStatusHistories");

                    b.HasData(
                        new
                        {
                            BillStatusHistoryID = new Guid("84ffa2f4-26e6-4e59-95e4-da0ea98495f3"),
                            BillID = new Guid("4b267549-53f5-4143-85dd-4508bbc92cf0"),
                            ChangeDate = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3106),
                            Note = "Order placed",
                            Status = "Ordered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("aa0067f9-9481-4ec3-935c-16323f8bcaaf"),
                            BillID = new Guid("4b267549-53f5-4143-85dd-4508bbc92cf0"),
                            ChangeDate = new DateTime(2024, 5, 23, 8, 9, 20, 889, DateTimeKind.Utc).AddTicks(3113),
                            Note = "Order shipped",
                            Status = "Shipped"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("26b85f1e-a345-4fc4-bb2c-7aa8d9a21ef6"),
                            BillID = new Guid("4b267549-53f5-4143-85dd-4508bbc92cf0"),
                            ChangeDate = new DateTime(2024, 5, 23, 9, 9, 20, 889, DateTimeKind.Utc).AddTicks(3115),
                            Note = "Order delivered",
                            Status = "Delivered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("6d87a836-866e-43ee-be0a-b71734be8498"),
                            BillID = new Guid("28364be2-a65b-4fc1-aad7-8dccc9bbd448"),
                            ChangeDate = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3117),
                            Note = "Order placed",
                            Status = "Ordered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("575644d6-8a8b-421e-bbd1-b7852ce21874"),
                            BillID = new Guid("28364be2-a65b-4fc1-aad7-8dccc9bbd448"),
                            ChangeDate = new DateTime(2024, 5, 23, 8, 9, 20, 889, DateTimeKind.Utc).AddTicks(3118),
                            Note = "Order shipped",
                            Status = "Shipped"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("2f0b2f59-6b35-429e-ac53-dc08b823d71b"),
                            BillID = new Guid("28364be2-a65b-4fc1-aad7-8dccc9bbd448"),
                            ChangeDate = new DateTime(2024, 5, 23, 9, 9, 20, 889, DateTimeKind.Utc).AddTicks(3121),
                            Note = "Order delivered",
                            Status = "Delivered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("f2a02c93-abdc-4025-809d-70cdac0d5a29"),
                            BillID = new Guid("a7f28647-512e-4273-a96a-9722fb161072"),
                            ChangeDate = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3122),
                            Note = "Order placed",
                            Status = "Ordered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("19dc3593-1bc2-4c2e-9e49-11f46bcd55e0"),
                            BillID = new Guid("a7f28647-512e-4273-a96a-9722fb161072"),
                            ChangeDate = new DateTime(2024, 5, 23, 8, 9, 20, 889, DateTimeKind.Utc).AddTicks(3124),
                            Note = "Order shipped",
                            Status = "Shipped"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("dafd196d-aef1-4aaa-9a29-b4ace6274d9f"),
                            BillID = new Guid("a7f28647-512e-4273-a96a-9722fb161072"),
                            ChangeDate = new DateTime(2024, 5, 23, 9, 9, 20, 889, DateTimeKind.Utc).AddTicks(3125),
                            Note = "Order delivered",
                            Status = "Delivered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("59595e9f-d59d-493d-a860-567625454305"),
                            BillID = new Guid("4df74ef5-e366-4e35-8ddf-d4886e4518d5"),
                            ChangeDate = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3130),
                            Note = "Order placed",
                            Status = "Ordered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("b6322f3e-ada6-4dbc-b7d7-ac918674bdb1"),
                            BillID = new Guid("4df74ef5-e366-4e35-8ddf-d4886e4518d5"),
                            ChangeDate = new DateTime(2024, 5, 23, 8, 9, 20, 889, DateTimeKind.Utc).AddTicks(3131),
                            Note = "Order shipped",
                            Status = "Shipped"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("a68a8961-a2c0-417d-8bed-af3eb3f968da"),
                            BillID = new Guid("4df74ef5-e366-4e35-8ddf-d4886e4518d5"),
                            ChangeDate = new DateTime(2024, 5, 23, 9, 9, 20, 889, DateTimeKind.Utc).AddTicks(3133),
                            Note = "Order delivered",
                            Status = "Delivered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("bb28baed-5e5e-4910-82f0-b5c52ec5bdf8"),
                            BillID = new Guid("9b901a47-24a8-4a33-85ba-53553802fe79"),
                            ChangeDate = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3134),
                            Note = "Order placed",
                            Status = "Ordered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("f3555493-5bbe-4263-9d23-ba74fc715145"),
                            BillID = new Guid("9b901a47-24a8-4a33-85ba-53553802fe79"),
                            ChangeDate = new DateTime(2024, 5, 23, 8, 9, 20, 889, DateTimeKind.Utc).AddTicks(3136),
                            Note = "Order shipped",
                            Status = "Shipped"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("8a58f66e-99a9-47d4-9df6-bfc3b45be3eb"),
                            BillID = new Guid("9b901a47-24a8-4a33-85ba-53553802fe79"),
                            ChangeDate = new DateTime(2024, 5, 23, 9, 9, 20, 889, DateTimeKind.Utc).AddTicks(3137),
                            Note = "Order delivered",
                            Status = "Delivered"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Cart", b =>
                {
                    b.Property<Guid>("CartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("CartID");

                    b.HasIndex("CustomerID")
                        .IsUnique();

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            CartID = new Guid("2ee1fa59-c6b7-45b1-8f55-0b4ef770f05c"),
                            CustomerID = new Guid("e57b1ee4-a901-410d-bdbe-2d6d146579f4"),
                            Description = "Customer 1's Cart"
                        },
                        new
                        {
                            CartID = new Guid("92ab9bc5-a655-4df0-bc77-ec987998d36c"),
                            CustomerID = new Guid("beb23968-4803-439f-a66c-16af00ca3a06"),
                            Description = "Customer 2's Cart"
                        },
                        new
                        {
                            CartID = new Guid("995a1937-36e7-4f19-a6bf-4d186ab49264"),
                            CustomerID = new Guid("7e95ffd5-df8a-4eed-8998-6c22a91caa48"),
                            Description = "Customer 3's Cart"
                        },
                        new
                        {
                            CartID = new Guid("7847673c-13b0-48c9-aec7-9913427dd17b"),
                            CustomerID = new Guid("2db21e69-cc89-45c5-8de5-2893ab10277f"),
                            Description = "Customer 4's Cart"
                        },
                        new
                        {
                            CartID = new Guid("254407d4-96e8-4165-bae7-45f57c04afad"),
                            CustomerID = new Guid("e0285d6e-78eb-4275-a67a-22515dcec565"),
                            Description = "Customer 5's Cart"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.CartDetails", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("ShoesDetails_SizeID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("CartID");

                    b.HasIndex("ShoesDetails_SizeID");

                    b.ToTable("CartDetails");

                    b.HasData(
                        new
                        {
                            ID = new Guid("7e973a68-9f37-4ea0-9b52-a0de58b7bbfb"),
                            CartID = new Guid("2ee1fa59-c6b7-45b1-8f55-0b4ef770f05c"),
                            Quantity = 1,
                            ShoesDetails_SizeID = new Guid("c5c2ab74-60a6-4e1a-8401-6a9b06291deb")
                        },
                        new
                        {
                            ID = new Guid("ca32e7b6-a673-4140-83ea-704bb2e8ad80"),
                            CartID = new Guid("92ab9bc5-a655-4df0-bc77-ec987998d36c"),
                            Quantity = 2,
                            ShoesDetails_SizeID = new Guid("5a604a68-cac2-4e69-8754-b16d43f33a62")
                        },
                        new
                        {
                            ID = new Guid("71911d43-c621-4964-b1ba-11cc284d4e92"),
                            CartID = new Guid("995a1937-36e7-4f19-a6bf-4d186ab49264"),
                            Quantity = 3,
                            ShoesDetails_SizeID = new Guid("144fed91-8d53-4233-b6af-8f92899ec105")
                        },
                        new
                        {
                            ID = new Guid("d6e0e42f-ea11-41de-9aed-38d43da73b19"),
                            CartID = new Guid("7847673c-13b0-48c9-aec7-9913427dd17b"),
                            Quantity = 4,
                            ShoesDetails_SizeID = new Guid("955c1385-1f0a-48d4-94f2-c4cd5424a99d")
                        },
                        new
                        {
                            ID = new Guid("d9075061-e63b-40b4-94fb-6bdda14429bc"),
                            CartID = new Guid("254407d4-96e8-4165-bae7-45f57c04afad"),
                            Quantity = 5,
                            ShoesDetails_SizeID = new Guid("ef78fc43-6f1c-40c5-b508-29fb41f2c7db")
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Color", b =>
                {
                    b.Property<Guid>("ColorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ColorID");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            ColorID = new Guid("a79a7f7d-b00c-48d3-9215-30d7986ef1c9"),
                            ColorCode = "C1",
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3219),
                            Name = "Red",
                            Status = "Active"
                        },
                        new
                        {
                            ColorID = new Guid("e295d080-0131-4c47-a90c-9ab2b87d1009"),
                            ColorCode = "C2",
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3233),
                            Name = "Blue",
                            Status = "Active"
                        },
                        new
                        {
                            ColorID = new Guid("e276c461-3f23-41af-aecd-0bb28e368934"),
                            ColorCode = "C3",
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3234),
                            Name = "Green",
                            Status = "Active"
                        },
                        new
                        {
                            ColorID = new Guid("99763dd5-235f-4fc4-ae5f-b56b3bf9e3e2"),
                            ColorCode = "C4",
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3235),
                            Name = "Yellow",
                            Status = "Active"
                        },
                        new
                        {
                            ColorID = new Guid("a7dbdfdd-4f60-4ec3-b608-366e7e054c3d"),
                            ColorCode = "C5",
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3237),
                            Name = "Black",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Customer", b =>
                {
                    b.Property<Guid>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ResetPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = new Guid("e57b1ee4-a901-410d-bdbe-2d6d146579f4"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2639),
                            Email = "customer1@example.com",
                            FullName = "Customer 1",
                            Password = "password",
                            PhoneNumber = "1234567890",
                            ResetPassword = "reset1",
                            Sex = "Male",
                            UserName = "customer1"
                        },
                        new
                        {
                            CustomerID = new Guid("beb23968-4803-439f-a66c-16af00ca3a06"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2645),
                            Email = "customer2@example.com",
                            FullName = "Customer 2",
                            Password = "password",
                            PhoneNumber = "0987654321",
                            ResetPassword = "reset2",
                            Sex = "Female",
                            UserName = "customer2"
                        },
                        new
                        {
                            CustomerID = new Guid("7e95ffd5-df8a-4eed-8998-6c22a91caa48"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2646),
                            Email = "customer3@example.com",
                            FullName = "Customer 3",
                            Password = "password",
                            PhoneNumber = "1231231234",
                            ResetPassword = "reset3",
                            Sex = "Male",
                            UserName = "customer3"
                        },
                        new
                        {
                            CustomerID = new Guid("2db21e69-cc89-45c5-8de5-2893ab10277f"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2648),
                            Email = "customer4@example.com",
                            FullName = "Customer 4",
                            Password = "password",
                            PhoneNumber = "4321432143",
                            ResetPassword = "reset4",
                            Sex = "Female",
                            UserName = "customer4"
                        },
                        new
                        {
                            CustomerID = new Guid("e0285d6e-78eb-4275-a67a-22515dcec565"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2650),
                            Email = "customer5@example.com",
                            FullName = "Customer 5",
                            Password = "password",
                            PhoneNumber = "6789678967",
                            ResetPassword = "reset5",
                            Sex = "Male",
                            UserName = "customer5"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Employee", b =>
                {
                    b.Property<Guid>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IdentificationCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeID");

                    b.HasIndex("RoleID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeID = new Guid("b1f6048c-8d34-4aaf-a30a-01afb06c1046"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2865),
                            Email = "employee1@example.com",
                            FullName = "Employee 1",
                            IdentificationCode = "ID1",
                            Image = "img1.png",
                            Password = "password",
                            PhoneNumber = "1234567890",
                            RoleID = new Guid("b337e26e-e213-41ce-8e0a-fc54da77eba2"),
                            Sex = "Male",
                            Status = "Active",
                            UserName = "employee1"
                        },
                        new
                        {
                            EmployeeID = new Guid("e54f69ea-4917-479d-8054-c3bd13457b4c"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2870),
                            Email = "employee2@example.com",
                            FullName = "Employee 2",
                            IdentificationCode = "ID2",
                            Image = "img2.png",
                            Password = "password",
                            PhoneNumber = "0987654321",
                            RoleID = new Guid("4f21a905-a8ff-4d5a-9687-5bca6bf0c72f"),
                            Sex = "Female",
                            Status = "Active",
                            UserName = "employee2"
                        },
                        new
                        {
                            EmployeeID = new Guid("cdb4cd64-5203-47f5-b435-da340b5d8988"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2872),
                            Email = "employee3@example.com",
                            FullName = "Employee 3",
                            IdentificationCode = "ID3",
                            Image = "img3.png",
                            Password = "password",
                            PhoneNumber = "1231231234",
                            RoleID = new Guid("f9771605-ed9c-4cb1-ab40-205df0a20e5f"),
                            Sex = "Male",
                            Status = "Active",
                            UserName = "employee3"
                        },
                        new
                        {
                            EmployeeID = new Guid("b46cea3b-a766-4980-a82f-3c8dde26a234"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2874),
                            Email = "employee4@example.com",
                            FullName = "Employee 4",
                            IdentificationCode = "ID4",
                            Image = "img4.png",
                            Password = "password",
                            PhoneNumber = "4321432143",
                            RoleID = new Guid("e3f5908b-c34b-4f2f-830e-b4c85f6e180f"),
                            Sex = "Female",
                            Status = "Active",
                            UserName = "employee4"
                        },
                        new
                        {
                            EmployeeID = new Guid("b0880b58-0326-4410-9be3-b3430a9b0b4a"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2876),
                            Email = "employee5@example.com",
                            FullName = "Employee 5",
                            IdentificationCode = "ID5",
                            Image = "img5.png",
                            Password = "password",
                            PhoneNumber = "6789678967",
                            RoleID = new Guid("83fc2d1b-5bad-42c0-9b82-27bdd606fbed"),
                            Sex = "Male",
                            Status = "Active",
                            UserName = "employee5"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Image", b =>
                {
                    b.Property<Guid>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ImageUrl1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl2")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl3")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl4")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ImageID");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ImageID = new Guid("e3b8ac43-dc98-4a46-a45b-4c46c8b1acb6"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3484),
                            ImageCode = "IMG1",
                            ImageUrl1 = "https://example.com/img1_1.jpg",
                            ImageUrl2 = "https://example.com/img1_2.jpg",
                            ImageUrl3 = "https://example.com/img1_3.jpg",
                            ImageUrl4 = "https://example.com/img1_4.jpg",
                            Name = "Image 1",
                            Status = "Active"
                        },
                        new
                        {
                            ImageID = new Guid("218199f6-835e-4ac8-ab74-4331c8d1883f"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3494),
                            ImageCode = "IMG2",
                            ImageUrl1 = "https://example.com/img2_1.jpg",
                            ImageUrl2 = "https://example.com/img2_2.jpg",
                            ImageUrl3 = "https://example.com/img2_3.jpg",
                            ImageUrl4 = "https://example.com/img2_4.jpg",
                            Name = "Image 2",
                            Status = "Active"
                        },
                        new
                        {
                            ImageID = new Guid("a412e4c2-2888-47d7-954f-757c248f8fc1"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3495),
                            ImageCode = "IMG3",
                            ImageUrl1 = "https://example.com/img3_1.jpg",
                            ImageUrl2 = "https://example.com/img3_2.jpg",
                            ImageUrl3 = "https://example.com/img3_3.jpg",
                            ImageUrl4 = "https://example.com/img3_4.jpg",
                            Name = "Image 3",
                            Status = "Active"
                        },
                        new
                        {
                            ImageID = new Guid("fe904674-9712-43bc-98f6-87cd32e1a6a0"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3498),
                            ImageCode = "IMG4",
                            ImageUrl1 = "https://example.com/img4_1.jpg",
                            ImageUrl2 = "https://example.com/img4_2.jpg",
                            ImageUrl3 = "https://example.com/img4_3.jpg",
                            ImageUrl4 = "https://example.com/img4_4.jpg",
                            Name = "Image 4",
                            Status = "Active"
                        },
                        new
                        {
                            ImageID = new Guid("aebc501c-a0c2-475c-bd8b-ad8d9715fb61"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3500),
                            ImageCode = "IMG5",
                            ImageUrl1 = "https://example.com/img5_1.jpg",
                            ImageUrl2 = "https://example.com/img5_2.jpg",
                            ImageUrl3 = "https://example.com/img5_3.jpg",
                            ImageUrl4 = "https://example.com/img5_4.jpg",
                            Name = "Image 5",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Material", b =>
                {
                    b.Property<Guid>("MaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaterialID");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            MaterialID = new Guid("064436ea-9e31-41d6-9459-64d39262beb2"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3345),
                            MaterialCode = "M1",
                            Name = "Leather",
                            Status = "Active"
                        },
                        new
                        {
                            MaterialID = new Guid("c055fe2a-926a-44db-b581-2f8f2b5d84fb"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3349),
                            MaterialCode = "M2",
                            Name = "Suede",
                            Status = "Active"
                        },
                        new
                        {
                            MaterialID = new Guid("af29784a-9aaa-4eea-b4de-6dfa0c011d59"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3350),
                            MaterialCode = "M3",
                            Name = "Canvas",
                            Status = "Active"
                        },
                        new
                        {
                            MaterialID = new Guid("86901f99-67c0-4017-93cd-012df6de81fd"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3358),
                            MaterialCode = "M4",
                            Name = "Synthetic",
                            Status = "Active"
                        },
                        new
                        {
                            MaterialID = new Guid("c587a43a-b000-4314-a22c-37d74927f96a"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3359),
                            MaterialCode = "M5",
                            Name = "Rubber",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Product", b =>
                {
                    b.Property<Guid>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = new Guid("b29652e2-df38-4d56-8024-3e8f5cb591fd"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3426),
                            Name = "Running Shoes",
                            ProductCode = "P1",
                            Status = "Active"
                        },
                        new
                        {
                            ProductID = new Guid("ed99f993-00f4-450b-8664-b14f427343aa"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3435),
                            Name = "Sneakers",
                            ProductCode = "P2",
                            Status = "Active"
                        },
                        new
                        {
                            ProductID = new Guid("a178a436-62c2-4bbe-a9a6-aca29bd78644"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3436),
                            Name = "Boots",
                            ProductCode = "P3",
                            Status = "Active"
                        },
                        new
                        {
                            ProductID = new Guid("2a134f4d-195a-4c22-901f-e0dc1d2ab55a"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3440),
                            Name = "Sandals",
                            ProductCode = "P4",
                            Status = "Active"
                        },
                        new
                        {
                            ProductID = new Guid("9bb6db80-e759-4b19-aa2e-3c53d12c34b9"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3441),
                            Name = "Formal Shoes",
                            ProductCode = "P5",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.PurchaseMethod", b =>
                {
                    b.Property<Guid>("PurchaseMethodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PurchaseMethodID");

                    b.ToTable("PurchaseMethods");

                    b.HasData(
                        new
                        {
                            PurchaseMethodID = new Guid("e9aeca0c-9123-4fd5-9f40-84916947dd57"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2983),
                            Name = "Credit Card",
                            Status = "Active"
                        },
                        new
                        {
                            PurchaseMethodID = new Guid("9ebd0022-01d3-4c80-9563-ecb38251f56d"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2989),
                            Name = "PayPal",
                            Status = "Active"
                        },
                        new
                        {
                            PurchaseMethodID = new Guid("b3ea1118-ae19-4c05-8c4f-e3841f35691c"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2990),
                            Name = "Cash",
                            Status = "Active"
                        },
                        new
                        {
                            PurchaseMethodID = new Guid("4ec57afa-f317-4aae-939f-82092b7f47b5"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2991),
                            Name = "Bank Transfer",
                            Status = "Active"
                        },
                        new
                        {
                            PurchaseMethodID = new Guid("10451571-ce23-44aa-905a-e85f09dca9b9"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2993),
                            Name = "Cryptocurrency",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Role", b =>
                {
                    b.Property<Guid>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = new Guid("b337e26e-e213-41ce-8e0a-fc54da77eba2"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2829),
                            RoleCode = "R1",
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleID = new Guid("4f21a905-a8ff-4d5a-9687-5bca6bf0c72f"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2833),
                            RoleCode = "R2",
                            RoleName = "User"
                        },
                        new
                        {
                            RoleID = new Guid("f9771605-ed9c-4cb1-ab40-205df0a20e5f"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2835),
                            RoleCode = "R3",
                            RoleName = "Manager"
                        },
                        new
                        {
                            RoleID = new Guid("e3f5908b-c34b-4f2f-830e-b4c85f6e180f"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2836),
                            RoleCode = "R4",
                            RoleName = "Support"
                        },
                        new
                        {
                            RoleID = new Guid("83fc2d1b-5bad-42c0-9b82-27bdd606fbed"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2840),
                            RoleCode = "R5",
                            RoleName = "Guest"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Sex", b =>
                {
                    b.Property<Guid>("SexID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SexName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("SexID");

                    b.ToTable("Sexes");

                    b.HasData(
                        new
                        {
                            SexID = new Guid("43f89f17-19a1-4cd0-927e-3ba4a87a7947"),
                            SexName = "Male"
                        },
                        new
                        {
                            SexID = new Guid("d86b3d83-b45c-41b5-9ca2-18b5794e94da"),
                            SexName = "Female"
                        },
                        new
                        {
                            SexID = new Guid("ec04c798-4084-459e-8860-4d7bbb41d968"),
                            SexName = "Unisex"
                        },
                        new
                        {
                            SexID = new Guid("df6dcf7e-fc97-4713-98d5-b99ee4d1cbff"),
                            SexName = "Kids"
                        },
                        new
                        {
                            SexID = new Guid("80de469b-8706-4bf1-893a-0f2d29d34ee8"),
                            SexName = "Others"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.ShoesDetails", b =>
                {
                    b.Property<Guid>("ShoesDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ColorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ImageID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ImportPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("MaterialID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SexID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShoesDetailsCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ShoesDetails_SizeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("StyleID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ShoesDetailsID");

                    b.HasIndex("ColorID");

                    b.HasIndex("ImageID");

                    b.HasIndex("MaterialID");

                    b.HasIndex("ProductID");

                    b.HasIndex("SexID");

                    b.HasIndex("StyleID");

                    b.ToTable("ShoesDetails");

                    b.HasData(
                        new
                        {
                            ShoesDetailsID = new Guid("952fcb48-fb07-4aa2-ad89-05c02cb6d009"),
                            ColorID = new Guid("a79a7f7d-b00c-48d3-9215-30d7986ef1c9"),
                            Description = "Running Shoes",
                            ImageID = new Guid("e3b8ac43-dc98-4a46-a45b-4c46c8b1acb6"),
                            ImportPrice = 800m,
                            MaterialID = new Guid("064436ea-9e31-41d6-9459-64d39262beb2"),
                            Price = 1000m,
                            ProductID = new Guid("b29652e2-df38-4d56-8024-3e8f5cb591fd"),
                            SexID = new Guid("43f89f17-19a1-4cd0-927e-3ba4a87a7947"),
                            ShoesDetailsCode = "SD1",
                            ShoesDetails_SizeID = new Guid("3ba54090-777d-47c7-b4a7-f4e657d7dd9f"),
                            Status = "Active",
                            StyleID = new Guid("1d8f9640-1937-4cee-a8cc-5f871517bfed")
                        },
                        new
                        {
                            ShoesDetailsID = new Guid("61629585-34fa-4609-8f3d-d7f92ceccd96"),
                            ColorID = new Guid("e295d080-0131-4c47-a90c-9ab2b87d1009"),
                            Description = "Sneakers",
                            ImageID = new Guid("218199f6-835e-4ac8-ab74-4331c8d1883f"),
                            ImportPrice = 1600m,
                            MaterialID = new Guid("c055fe2a-926a-44db-b581-2f8f2b5d84fb"),
                            Price = 2000m,
                            ProductID = new Guid("ed99f993-00f4-450b-8664-b14f427343aa"),
                            SexID = new Guid("d86b3d83-b45c-41b5-9ca2-18b5794e94da"),
                            ShoesDetailsCode = "SD2",
                            ShoesDetails_SizeID = new Guid("6d0e72bd-6a5d-494e-bc3a-d44a9fe6571d"),
                            Status = "Active",
                            StyleID = new Guid("fb127de1-371c-4051-b695-0463d785d4b4")
                        },
                        new
                        {
                            ShoesDetailsID = new Guid("7c2ea359-11ab-4ff4-8c6f-66017b915dea"),
                            ColorID = new Guid("e276c461-3f23-41af-aecd-0bb28e368934"),
                            Description = "Boots",
                            ImageID = new Guid("a412e4c2-2888-47d7-954f-757c248f8fc1"),
                            ImportPrice = 2400m,
                            MaterialID = new Guid("af29784a-9aaa-4eea-b4de-6dfa0c011d59"),
                            Price = 3000m,
                            ProductID = new Guid("a178a436-62c2-4bbe-a9a6-aca29bd78644"),
                            SexID = new Guid("ec04c798-4084-459e-8860-4d7bbb41d968"),
                            ShoesDetailsCode = "SD3",
                            ShoesDetails_SizeID = new Guid("d667e0b2-3bbc-43bb-8db4-613396bbf93d"),
                            Status = "Active",
                            StyleID = new Guid("8b6542d7-9102-40f0-a837-2340449c4561")
                        },
                        new
                        {
                            ShoesDetailsID = new Guid("c2ccb2a5-1f66-4900-b05f-f0ca9e7334a1"),
                            ColorID = new Guid("99763dd5-235f-4fc4-ae5f-b56b3bf9e3e2"),
                            Description = "Sandals",
                            ImageID = new Guid("fe904674-9712-43bc-98f6-87cd32e1a6a0"),
                            ImportPrice = 3200m,
                            MaterialID = new Guid("86901f99-67c0-4017-93cd-012df6de81fd"),
                            Price = 4000m,
                            ProductID = new Guid("2a134f4d-195a-4c22-901f-e0dc1d2ab55a"),
                            SexID = new Guid("df6dcf7e-fc97-4713-98d5-b99ee4d1cbff"),
                            ShoesDetailsCode = "SD4",
                            ShoesDetails_SizeID = new Guid("ee66ef88-f4cf-462e-a8f7-0ed83133a167"),
                            Status = "Active",
                            StyleID = new Guid("78a3a78b-474b-4c23-9c7f-52a3cb65c274")
                        },
                        new
                        {
                            ShoesDetailsID = new Guid("2634ab46-ccf7-42fd-a846-6107c78428c3"),
                            ColorID = new Guid("a7dbdfdd-4f60-4ec3-b608-366e7e054c3d"),
                            Description = "Formal Shoes",
                            ImageID = new Guid("aebc501c-a0c2-475c-bd8b-ad8d9715fb61"),
                            ImportPrice = 4000m,
                            MaterialID = new Guid("c587a43a-b000-4314-a22c-37d74927f96a"),
                            Price = 5000m,
                            ProductID = new Guid("9bb6db80-e759-4b19-aa2e-3c53d12c34b9"),
                            SexID = new Guid("80de469b-8706-4bf1-893a-0f2d29d34ee8"),
                            ShoesDetailsCode = "SD5",
                            ShoesDetails_SizeID = new Guid("95c03d2f-dba4-4887-bcc6-d040fad5e7f7"),
                            Status = "Active",
                            StyleID = new Guid("0a368238-1881-4be3-847a-a7f1b247bdb6")
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.ShoesDetails_Size", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("ShoesDetailsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SizeID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ShoesDetailsID");

                    b.HasIndex("SizeID");

                    b.ToTable("ShoesDetails_Sizes");

                    b.HasData(
                        new
                        {
                            ID = new Guid("c5c2ab74-60a6-4e1a-8401-6a9b06291deb"),
                            Quantity = 10,
                            ShoesDetailsID = new Guid("952fcb48-fb07-4aa2-ad89-05c02cb6d009"),
                            SizeID = new Guid("3ca0552f-87e3-4873-b7de-4dff6fbf0f98")
                        },
                        new
                        {
                            ID = new Guid("5a604a68-cac2-4e69-8754-b16d43f33a62"),
                            Quantity = 20,
                            ShoesDetailsID = new Guid("61629585-34fa-4609-8f3d-d7f92ceccd96"),
                            SizeID = new Guid("391f05a6-9129-4896-ace5-fe223494b133")
                        },
                        new
                        {
                            ID = new Guid("144fed91-8d53-4233-b6af-8f92899ec105"),
                            Quantity = 30,
                            ShoesDetailsID = new Guid("7c2ea359-11ab-4ff4-8c6f-66017b915dea"),
                            SizeID = new Guid("b984d187-6dd1-45cd-9973-3d0e6f7026a1")
                        },
                        new
                        {
                            ID = new Guid("955c1385-1f0a-48d4-94f2-c4cd5424a99d"),
                            Quantity = 40,
                            ShoesDetailsID = new Guid("c2ccb2a5-1f66-4900-b05f-f0ca9e7334a1"),
                            SizeID = new Guid("7d532075-a527-40dc-b10d-ddd0bfc1ab63")
                        },
                        new
                        {
                            ID = new Guid("ef78fc43-6f1c-40c5-b508-29fb41f2c7db"),
                            Quantity = 50,
                            ShoesDetailsID = new Guid("2634ab46-ccf7-42fd-a846-6107c78428c3"),
                            SizeID = new Guid("4e63eb70-2e11-4bfc-a831-e5548f8b8ad3")
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Size", b =>
                {
                    b.Property<Guid>("SizeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SizeCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SizeID");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            SizeID = new Guid("3ca0552f-87e3-4873-b7de-4dff6fbf0f98"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3158),
                            Name = "Size 1",
                            SizeCode = "S1",
                            Status = "Active"
                        },
                        new
                        {
                            SizeID = new Guid("391f05a6-9129-4896-ace5-fe223494b133"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3161),
                            Name = "Size 2",
                            SizeCode = "S2",
                            Status = "Active"
                        },
                        new
                        {
                            SizeID = new Guid("b984d187-6dd1-45cd-9973-3d0e6f7026a1"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3165),
                            Name = "Size 3",
                            SizeCode = "S3",
                            Status = "Active"
                        },
                        new
                        {
                            SizeID = new Guid("7d532075-a527-40dc-b10d-ddd0bfc1ab63"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3166),
                            Name = "Size 4",
                            SizeCode = "S4",
                            Status = "Active"
                        },
                        new
                        {
                            SizeID = new Guid("4e63eb70-2e11-4bfc-a831-e5548f8b8ad3"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3167),
                            Name = "Size 5",
                            SizeCode = "S5",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Style", b =>
                {
                    b.Property<Guid>("StyleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("StyleCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("StyleID");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            StyleID = new Guid("1d8f9640-1937-4cee-a8cc-5f871517bfed"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3571),
                            Name = "Casual",
                            Status = "Active",
                            StyleCode = "ST1"
                        },
                        new
                        {
                            StyleID = new Guid("fb127de1-371c-4051-b695-0463d785d4b4"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3576),
                            Name = "Sport",
                            Status = "Active",
                            StyleCode = "ST2"
                        },
                        new
                        {
                            StyleID = new Guid("8b6542d7-9102-40f0-a837-2340449c4561"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3578),
                            Name = "Formal",
                            Status = "Active",
                            StyleCode = "ST3"
                        },
                        new
                        {
                            StyleID = new Guid("78a3a78b-474b-4c23-9c7f-52a3cb65c274"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3579),
                            Name = "Outdoor",
                            Status = "Active",
                            StyleCode = "ST4"
                        },
                        new
                        {
                            StyleID = new Guid("0a368238-1881-4be3-847a-a7f1b247bdb6"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(3583),
                            Name = "Work",
                            Status = "Active",
                            StyleCode = "ST5"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Voucher", b =>
                {
                    b.Property<Guid>("VoucherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MaxUsage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RemainingUsage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("bit");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<string>("VoucherCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("VoucherValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("VoucherID");

                    b.ToTable("Vouchers");

                    b.HasData(
                        new
                        {
                            VoucherID = new Guid("6e012097-4f27-41cd-8778-8c1d835ca77a"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2895),
                            ExpirationDate = new DateTime(2024, 6, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2895),
                            MaxUsage = 10m,
                            RemainingUsage = 5m,
                            Status = true,
                            Total = 1000,
                            VoucherCode = "VC1",
                            VoucherValue = 100m
                        },
                        new
                        {
                            VoucherID = new Guid("3a72329e-37ae-43aa-ab33-223b82131d4f"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2904),
                            ExpirationDate = new DateTime(2024, 6, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2904),
                            MaxUsage = 10m,
                            RemainingUsage = 4m,
                            Status = true,
                            Total = 1000,
                            VoucherCode = "VC2",
                            VoucherValue = 200m
                        },
                        new
                        {
                            VoucherID = new Guid("2fa517bd-0f4d-4315-8a60-d3a3f50f7c67"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2909),
                            ExpirationDate = new DateTime(2024, 6, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2909),
                            MaxUsage = 10m,
                            RemainingUsage = 3m,
                            Status = true,
                            Total = 1000,
                            VoucherCode = "VC3",
                            VoucherValue = 300m
                        },
                        new
                        {
                            VoucherID = new Guid("c9e42695-d9ab-466c-a23b-6ec49aa3f4fb"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2953),
                            ExpirationDate = new DateTime(2024, 6, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2953),
                            MaxUsage = 10m,
                            RemainingUsage = 2m,
                            Status = true,
                            Total = 1000,
                            VoucherCode = "VC4",
                            VoucherValue = 400m
                        },
                        new
                        {
                            VoucherID = new Guid("c7feac47-13ae-47bb-a192-b04d147766a8"),
                            DateCreated = new DateTime(2024, 5, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2956),
                            ExpirationDate = new DateTime(2024, 6, 23, 7, 9, 20, 889, DateTimeKind.Utc).AddTicks(2956),
                            MaxUsage = 10m,
                            RemainingUsage = 1m,
                            Status = true,
                            Total = 1000,
                            VoucherCode = "VC5",
                            VoucherValue = 500m
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Address", b =>
                {
                    b.HasOne("APP_DATA.Entity.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("APP_DATA.Entity.Bill", b =>
                {
                    b.HasOne("APP_DATA.Entity.Customer", "Customer")
                        .WithMany("Bills")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Employee", "Employee")
                        .WithMany("Bills")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.PurchaseMethod", "PurchaseMethod")
                        .WithMany("Bills")
                        .HasForeignKey("PurchaseMethodID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Voucher", "Voucher")
                        .WithMany("Bills")
                        .HasForeignKey("VoucherID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("PurchaseMethod");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("APP_DATA.Entity.BillDetails", b =>
                {
                    b.HasOne("APP_DATA.Entity.Bill", "Bill")
                        .WithMany("BillDetails")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("APP_DATA.Entity.BillStatusHistory", b =>
                {
                    b.HasOne("APP_DATA.Entity.Bill", "Bill")
                        .WithMany("BillStatusHistories")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("APP_DATA.Entity.Cart", b =>
                {
                    b.HasOne("APP_DATA.Entity.Customer", "Customer")
                        .WithOne("Carts")
                        .HasForeignKey("APP_DATA.Entity.Cart", "CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("APP_DATA.Entity.CartDetails", b =>
                {
                    b.HasOne("APP_DATA.Entity.Cart", "Cart")
                        .WithMany("CartDetails")
                        .HasForeignKey("CartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.ShoesDetails_Size", "ShoesDetails_Size")
                        .WithMany("CartDetails")
                        .HasForeignKey("ShoesDetails_SizeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("ShoesDetails_Size");
                });

            modelBuilder.Entity("APP_DATA.Entity.Employee", b =>
                {
                    b.HasOne("APP_DATA.Entity.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("APP_DATA.Entity.ShoesDetails", b =>
                {
                    b.HasOne("APP_DATA.Entity.Color", "Color")
                        .WithMany("ShoesDetails")
                        .HasForeignKey("ColorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Image", "Image")
                        .WithMany("ShoesDetails")
                        .HasForeignKey("ImageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Material", "Material")
                        .WithMany("ShoesDetails")
                        .HasForeignKey("MaterialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Product", "Product")
                        .WithMany("ShoesDetails")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Sex", "Sex")
                        .WithMany("ShoesDetails")
                        .HasForeignKey("SexID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Style", "Style")
                        .WithMany("ShoesDetails")
                        .HasForeignKey("StyleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Image");

                    b.Navigation("Material");

                    b.Navigation("Product");

                    b.Navigation("Sex");

                    b.Navigation("Style");
                });

            modelBuilder.Entity("APP_DATA.Entity.ShoesDetails_Size", b =>
                {
                    b.HasOne("APP_DATA.Entity.ShoesDetails", "ShoesDetails")
                        .WithMany("ShoesDetails_Sizes")
                        .HasForeignKey("ShoesDetailsID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Size", "Size")
                        .WithMany("ShoesDetails_Sizes")
                        .HasForeignKey("SizeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShoesDetails");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("APP_DATA.Entity.Bill", b =>
                {
                    b.Navigation("BillDetails");

                    b.Navigation("BillStatusHistories");
                });

            modelBuilder.Entity("APP_DATA.Entity.Cart", b =>
                {
                    b.Navigation("CartDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Color", b =>
                {
                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Bills");

                    b.Navigation("Carts")
                        .IsRequired();
                });

            modelBuilder.Entity("APP_DATA.Entity.Employee", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("APP_DATA.Entity.Image", b =>
                {
                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Material", b =>
                {
                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Product", b =>
                {
                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.PurchaseMethod", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("APP_DATA.Entity.Role", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("APP_DATA.Entity.Sex", b =>
                {
                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.ShoesDetails", b =>
                {
                    b.Navigation("ShoesDetails_Sizes");
                });

            modelBuilder.Entity("APP_DATA.Entity.ShoesDetails_Size", b =>
                {
                    b.Navigation("CartDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Size", b =>
                {
                    b.Navigation("ShoesDetails_Sizes");
                });

            modelBuilder.Entity("APP_DATA.Entity.Style", b =>
                {
                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Voucher", b =>
                {
                    b.Navigation("Bills");
                });
#pragma warning restore 612, 618
        }
    }
}
