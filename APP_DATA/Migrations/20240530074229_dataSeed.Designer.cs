// <auto-generated />
using System;
using APP_DATA.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APP_DATA.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20240530074229_dataSeed")]
    partial class dataSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("APP_DATA.Entity.Address", b =>
                {
                    b.Property<Guid>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Commune")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DistrictCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsDefaultAddress")
                        .HasColumnType("bit");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ShippingCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WardCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("AddressID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressID = new Guid("1e0c2235-6e08-4238-b4a8-505749401ee5"),
                            Commune = "Commune 1",
                            CustomerID = new Guid("cb140f0e-ab7d-4333-b3bb-3161162617e4"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5272),
                            District = "District 1",
                            DistrictCode = "D1",
                            IsDefaultAddress = true,
                            Province = "Province 1",
                            ShippingCost = 10m,
                            Status = "Active",
                            Street = "Street 1",
                            WardCode = "W1"
                        },
                        new
                        {
                            AddressID = new Guid("cd1215ff-bdef-4e39-9b4a-f2f3e0064331"),
                            Commune = "Commune 2",
                            CustomerID = new Guid("6049ea20-2342-4932-a486-56d902ce8933"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5282),
                            District = "District 2",
                            DistrictCode = "D2",
                            IsDefaultAddress = false,
                            Province = "Province 2",
                            ShippingCost = 20m,
                            Status = "Active",
                            Street = "Street 2",
                            WardCode = "W2"
                        },
                        new
                        {
                            AddressID = new Guid("b8c686fc-f0ae-4a29-8337-59e386cfab60"),
                            Commune = "Commune 3",
                            CustomerID = new Guid("290ad551-b4f3-40a8-b98e-009b83a2b98e"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5284),
                            District = "District 3",
                            DistrictCode = "D3",
                            IsDefaultAddress = true,
                            Province = "Province 3",
                            ShippingCost = 30m,
                            Status = "Active",
                            Street = "Street 3",
                            WardCode = "W3"
                        },
                        new
                        {
                            AddressID = new Guid("4b089d39-6afb-45b5-8b69-6af236445982"),
                            Commune = "Commune 4",
                            CustomerID = new Guid("868c7f27-cea0-47f3-88ec-a54e683468d8"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5288),
                            District = "District 4",
                            DistrictCode = "D4",
                            IsDefaultAddress = false,
                            Province = "Province 4",
                            ShippingCost = 40m,
                            Status = "Active",
                            Street = "Street 4",
                            WardCode = "W4"
                        },
                        new
                        {
                            AddressID = new Guid("be751ea0-0f53-437c-93e3-94f461722616"),
                            Commune = "Commune 5",
                            CustomerID = new Guid("35efaa4b-4c57-441a-b6b1-06010cc7dbd6"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5290),
                            District = "District 5",
                            DistrictCode = "D5",
                            IsDefaultAddress = true,
                            Province = "Province 5",
                            ShippingCost = 50m,
                            Status = "Active",
                            Street = "Street 5",
                            WardCode = "W5"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Bill", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BillCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CancelDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ConfirmationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentDay")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PurchaseMethodID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ShippingCosts")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("SuccessDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPriceAfterDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VoucherID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("PurchaseMethodID");

                    b.HasIndex("VoucherID");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            ID = new Guid("16bf64cf-7814-4dfb-90f5-c99c599f873a"),
                            BillCode = "B1",
                            ConfirmationDate = new DateTime(2024, 5, 30, 8, 42, 27, 534, DateTimeKind.Utc).AddTicks(5520),
                            CustomerID = new Guid("cb140f0e-ab7d-4333-b3bb-3161162617e4"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5511),
                            DeliveryDate = new DateTime(2024, 6, 1, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5517),
                            EmployeeID = new Guid("2b06fe95-4032-44e0-93e3-3310e0a7596d"),
                            IsPaid = true,
                            Note = "Note 1",
                            PaymentDay = new DateTime(2024, 5, 30, 10, 42, 27, 534, DateTimeKind.Utc).AddTicks(5522),
                            PurchaseMethodID = new Guid("490d16d6-73b8-48ca-aacc-0d5935e4a58f"),
                            ShippingCosts = 50m,
                            Status = "Delivered",
                            SuccessDate = new DateTime(2024, 5, 31, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5512),
                            TotalPrice = 1000m,
                            TotalPriceAfterDiscount = 950m,
                            TransactionType = "Credit",
                            UpdateDate = new DateTime(2024, 5, 30, 9, 42, 27, 534, DateTimeKind.Utc).AddTicks(5521),
                            VoucherID = new Guid("d29f9892-5580-4b13-aa4b-b4511739a13a")
                        },
                        new
                        {
                            ID = new Guid("0ee121c0-84b4-40fa-a297-23452f6602a8"),
                            BillCode = "B2",
                            ConfirmationDate = new DateTime(2024, 5, 30, 8, 42, 27, 534, DateTimeKind.Utc).AddTicks(5530),
                            CustomerID = new Guid("6049ea20-2342-4932-a486-56d902ce8933"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5528),
                            DeliveryDate = new DateTime(2024, 6, 1, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5529),
                            EmployeeID = new Guid("acf34b5d-d435-40d1-a119-b53034fdd4ac"),
                            IsPaid = true,
                            Note = "Note 2",
                            PaymentDay = new DateTime(2024, 5, 30, 10, 42, 27, 534, DateTimeKind.Utc).AddTicks(5531),
                            PurchaseMethodID = new Guid("27c2138c-4bc7-4be3-bbba-bfa585238757"),
                            ShippingCosts = 100m,
                            Status = "Delivered",
                            SuccessDate = new DateTime(2024, 5, 31, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5529),
                            TotalPrice = 2000m,
                            TotalPriceAfterDiscount = 1900m,
                            TransactionType = "Credit",
                            UpdateDate = new DateTime(2024, 5, 30, 9, 42, 27, 534, DateTimeKind.Utc).AddTicks(5531),
                            VoucherID = new Guid("ba71900c-8c7c-4f36-b4d7-b58b791acc99")
                        },
                        new
                        {
                            ID = new Guid("06f59fd5-1123-428f-8d65-17b7982a3255"),
                            BillCode = "B3",
                            ConfirmationDate = new DateTime(2024, 5, 30, 8, 42, 27, 534, DateTimeKind.Utc).AddTicks(5537),
                            CustomerID = new Guid("290ad551-b4f3-40a8-b98e-009b83a2b98e"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5535),
                            DeliveryDate = new DateTime(2024, 6, 1, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5535),
                            EmployeeID = new Guid("cefe6724-b3d9-4db2-9caf-d74d7a5c434a"),
                            IsPaid = true,
                            Note = "Note 3",
                            PaymentDay = new DateTime(2024, 5, 30, 10, 42, 27, 534, DateTimeKind.Utc).AddTicks(5537),
                            PurchaseMethodID = new Guid("1d6d14ce-e882-44cc-b662-9c2aa7d541b5"),
                            ShippingCosts = 150m,
                            Status = "Delivered",
                            SuccessDate = new DateTime(2024, 5, 31, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5535),
                            TotalPrice = 3000m,
                            TotalPriceAfterDiscount = 2850m,
                            TransactionType = "Credit",
                            UpdateDate = new DateTime(2024, 5, 30, 9, 42, 27, 534, DateTimeKind.Utc).AddTicks(5537),
                            VoucherID = new Guid("3046ae4a-4010-4f85-870d-d77ab5a9bb23")
                        },
                        new
                        {
                            ID = new Guid("fe46e624-b0e6-481b-a8b5-3361bf565ac6"),
                            BillCode = "B4",
                            ConfirmationDate = new DateTime(2024, 5, 30, 8, 42, 27, 534, DateTimeKind.Utc).AddTicks(5542),
                            CustomerID = new Guid("868c7f27-cea0-47f3-88ec-a54e683468d8"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5540),
                            DeliveryDate = new DateTime(2024, 6, 1, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5541),
                            EmployeeID = new Guid("37315b88-fc43-4cf8-ada9-03988a1d84bb"),
                            IsPaid = true,
                            Note = "Note 4",
                            PaymentDay = new DateTime(2024, 5, 30, 10, 42, 27, 534, DateTimeKind.Utc).AddTicks(5543),
                            PurchaseMethodID = new Guid("4af1b393-50b1-45d2-85f9-c9bcba777f36"),
                            ShippingCosts = 200m,
                            Status = "Delivered",
                            SuccessDate = new DateTime(2024, 5, 31, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5540),
                            TotalPrice = 4000m,
                            TotalPriceAfterDiscount = 3800m,
                            TransactionType = "Credit",
                            UpdateDate = new DateTime(2024, 5, 30, 9, 42, 27, 534, DateTimeKind.Utc).AddTicks(5543),
                            VoucherID = new Guid("70b24ab2-a09a-4fd5-8ac2-38afdba3ea6c")
                        },
                        new
                        {
                            ID = new Guid("4874cb76-3875-462d-bcba-ee298790cd12"),
                            BillCode = "B5",
                            ConfirmationDate = new DateTime(2024, 5, 30, 8, 42, 27, 534, DateTimeKind.Utc).AddTicks(5549),
                            CustomerID = new Guid("35efaa4b-4c57-441a-b6b1-06010cc7dbd6"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5548),
                            DeliveryDate = new DateTime(2024, 6, 1, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5549),
                            EmployeeID = new Guid("fc663b04-a869-4a29-800c-e1dd0ca849ea"),
                            IsPaid = true,
                            Note = "Note 5",
                            PaymentDay = new DateTime(2024, 5, 30, 10, 42, 27, 534, DateTimeKind.Utc).AddTicks(5550),
                            PurchaseMethodID = new Guid("d267ff42-a8cc-44d9-ad29-284cc7b5b3a2"),
                            ShippingCosts = 250m,
                            Status = "Delivered",
                            SuccessDate = new DateTime(2024, 5, 31, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5548),
                            TotalPrice = 5000m,
                            TotalPriceAfterDiscount = 4750m,
                            TransactionType = "Credit",
                            UpdateDate = new DateTime(2024, 5, 30, 9, 42, 27, 534, DateTimeKind.Utc).AddTicks(5550),
                            VoucherID = new Guid("abad49f9-7044-4f60-baff-004c53521fb7")
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.BillDetails", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("ShoesDetails_SizeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("BillID");

                    b.ToTable("BillDetails");

                    b.HasData(
                        new
                        {
                            ID = new Guid("563e7a02-8c18-4a78-9eb4-42564453e769"),
                            BillID = new Guid("16bf64cf-7814-4dfb-90f5-c99c599f873a"),
                            Price = 1000m,
                            Quantity = 1,
                            ShoesDetails_SizeID = new Guid("7890c56d-6b31-4fb6-a0b7-ce78be9e040a"),
                            Status = "Delivered"
                        },
                        new
                        {
                            ID = new Guid("d40d5061-d782-4f64-b8d0-775a2eeb5203"),
                            BillID = new Guid("0ee121c0-84b4-40fa-a297-23452f6602a8"),
                            Price = 2000m,
                            Quantity = 2,
                            ShoesDetails_SizeID = new Guid("f3657c82-a4ba-4b7d-b868-9b3e14a888ac"),
                            Status = "Delivered"
                        },
                        new
                        {
                            ID = new Guid("1a160a62-f2f4-4340-ab0c-d60372eef8d8"),
                            BillID = new Guid("06f59fd5-1123-428f-8d65-17b7982a3255"),
                            Price = 3000m,
                            Quantity = 3,
                            ShoesDetails_SizeID = new Guid("1891c2e8-ab12-452e-9ccb-0436516fdca9"),
                            Status = "Delivered"
                        },
                        new
                        {
                            ID = new Guid("35d840b7-0580-4f48-aa04-1c763476c8d4"),
                            BillID = new Guid("fe46e624-b0e6-481b-a8b5-3361bf565ac6"),
                            Price = 4000m,
                            Quantity = 4,
                            ShoesDetails_SizeID = new Guid("5f6c1e41-9ec7-44ac-89ee-a2b9fb64add9"),
                            Status = "Delivered"
                        },
                        new
                        {
                            ID = new Guid("df4959f4-e46e-4560-824d-31a2e5d7d385"),
                            BillID = new Guid("4874cb76-3875-462d-bcba-ee298790cd12"),
                            Price = 5000m,
                            Quantity = 5,
                            ShoesDetails_SizeID = new Guid("cb8e619e-d4ff-4944-b225-323bcc122110"),
                            Status = "Delivered"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.BillStatusHistory", b =>
                {
                    b.Property<Guid>("BillStatusHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BillStatusHistoryID");

                    b.HasIndex("BillID");

                    b.ToTable("BillStatusHistories");

                    b.HasData(
                        new
                        {
                            BillStatusHistoryID = new Guid("968ce8bf-0d67-4067-bf52-e5b04fa34c3b"),
                            BillID = new Guid("16bf64cf-7814-4dfb-90f5-c99c599f873a"),
                            ChangeDate = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5607),
                            Note = "Order placed",
                            Status = "Ordered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("35939d62-e7c0-4198-bd71-877f37ca89b1"),
                            BillID = new Guid("16bf64cf-7814-4dfb-90f5-c99c599f873a"),
                            ChangeDate = new DateTime(2024, 5, 30, 8, 42, 27, 534, DateTimeKind.Utc).AddTicks(5610),
                            Note = "Order shipped",
                            Status = "Shipped"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("27b21707-05be-425b-811d-be76c926125b"),
                            BillID = new Guid("16bf64cf-7814-4dfb-90f5-c99c599f873a"),
                            ChangeDate = new DateTime(2024, 5, 30, 9, 42, 27, 534, DateTimeKind.Utc).AddTicks(5612),
                            Note = "Order delivered",
                            Status = "Delivered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("37204af0-2f8b-4167-8f5b-e75898bce3e1"),
                            BillID = new Guid("0ee121c0-84b4-40fa-a297-23452f6602a8"),
                            ChangeDate = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5613),
                            Note = "Order placed",
                            Status = "Ordered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("0580cf7f-67df-4e06-a4b4-ca77e1834b1a"),
                            BillID = new Guid("0ee121c0-84b4-40fa-a297-23452f6602a8"),
                            ChangeDate = new DateTime(2024, 5, 30, 8, 42, 27, 534, DateTimeKind.Utc).AddTicks(5615),
                            Note = "Order shipped",
                            Status = "Shipped"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("692470fd-5bb9-4354-a8df-f0b370aa707b"),
                            BillID = new Guid("0ee121c0-84b4-40fa-a297-23452f6602a8"),
                            ChangeDate = new DateTime(2024, 5, 30, 9, 42, 27, 534, DateTimeKind.Utc).AddTicks(5619),
                            Note = "Order delivered",
                            Status = "Delivered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("0937f48d-9b2d-4511-a1fe-a670df47d38f"),
                            BillID = new Guid("06f59fd5-1123-428f-8d65-17b7982a3255"),
                            ChangeDate = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5621),
                            Note = "Order placed",
                            Status = "Ordered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("d103bfbb-dd91-4d92-8f7e-2b567c64262f"),
                            BillID = new Guid("06f59fd5-1123-428f-8d65-17b7982a3255"),
                            ChangeDate = new DateTime(2024, 5, 30, 8, 42, 27, 534, DateTimeKind.Utc).AddTicks(5623),
                            Note = "Order shipped",
                            Status = "Shipped"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("578420dd-9849-47ca-b057-11ded00a789b"),
                            BillID = new Guid("06f59fd5-1123-428f-8d65-17b7982a3255"),
                            ChangeDate = new DateTime(2024, 5, 30, 9, 42, 27, 534, DateTimeKind.Utc).AddTicks(5624),
                            Note = "Order delivered",
                            Status = "Delivered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("f4043d68-cd40-4d76-96ce-28ff9ff22e63"),
                            BillID = new Guid("fe46e624-b0e6-481b-a8b5-3361bf565ac6"),
                            ChangeDate = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5627),
                            Note = "Order placed",
                            Status = "Ordered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("257b1658-c583-477d-9b2d-dd618348cccd"),
                            BillID = new Guid("fe46e624-b0e6-481b-a8b5-3361bf565ac6"),
                            ChangeDate = new DateTime(2024, 5, 30, 8, 42, 27, 534, DateTimeKind.Utc).AddTicks(5628),
                            Note = "Order shipped",
                            Status = "Shipped"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("c48c70f1-d246-4d12-8bbd-0a621ebe08e8"),
                            BillID = new Guid("fe46e624-b0e6-481b-a8b5-3361bf565ac6"),
                            ChangeDate = new DateTime(2024, 5, 30, 9, 42, 27, 534, DateTimeKind.Utc).AddTicks(5630),
                            Note = "Order delivered",
                            Status = "Delivered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("b3ea9f60-346c-4003-a29c-b7d9456af597"),
                            BillID = new Guid("4874cb76-3875-462d-bcba-ee298790cd12"),
                            ChangeDate = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5632),
                            Note = "Order placed",
                            Status = "Ordered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("79b9aac7-6de2-4c72-8353-362da8d1278d"),
                            BillID = new Guid("4874cb76-3875-462d-bcba-ee298790cd12"),
                            ChangeDate = new DateTime(2024, 5, 30, 8, 42, 27, 534, DateTimeKind.Utc).AddTicks(5635),
                            Note = "Order shipped",
                            Status = "Shipped"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("a73b5ce3-bc51-439a-894e-da16abc713a4"),
                            BillID = new Guid("4874cb76-3875-462d-bcba-ee298790cd12"),
                            ChangeDate = new DateTime(2024, 5, 30, 9, 42, 27, 534, DateTimeKind.Utc).AddTicks(5637),
                            Note = "Order delivered",
                            Status = "Delivered"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Cart", b =>
                {
                    b.Property<Guid>("CartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CartID");

                    b.HasIndex("CustomerID")
                        .IsUnique();

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            CartID = new Guid("151db43b-1b16-42d3-9bbc-7df09f6f7bb6"),
                            CustomerID = new Guid("cb140f0e-ab7d-4333-b3bb-3161162617e4")
                        },
                        new
                        {
                            CartID = new Guid("c06fe51c-3286-4bd0-aa7f-230b38fcf3dc"),
                            CustomerID = new Guid("6049ea20-2342-4932-a486-56d902ce8933")
                        },
                        new
                        {
                            CartID = new Guid("82e71c2d-8f10-4f7a-8bc8-d400638946ea"),
                            CustomerID = new Guid("290ad551-b4f3-40a8-b98e-009b83a2b98e")
                        },
                        new
                        {
                            CartID = new Guid("66f3defb-f75c-4495-9054-ca51376a24a4"),
                            CustomerID = new Guid("868c7f27-cea0-47f3-88ec-a54e683468d8")
                        },
                        new
                        {
                            CartID = new Guid("8fb14508-d80e-411c-9a65-c2a34a47757e"),
                            CustomerID = new Guid("35efaa4b-4c57-441a-b6b1-06010cc7dbd6")
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.CartDetails", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("ShoeDetailsID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("CartID");

                    b.HasIndex("ShoeDetailsID");

                    b.ToTable("CartDetails");

                    b.HasData(
                        new
                        {
                            ID = new Guid("1b3345a5-f9d0-4994-9391-75c8e1b0135d"),
                            CartID = new Guid("151db43b-1b16-42d3-9bbc-7df09f6f7bb6"),
                            Quantity = 1,
                            ShoeDetailsID = new Guid("7549d945-06c1-44e1-9fd9-009df7d4d81b")
                        },
                        new
                        {
                            ID = new Guid("cf04a1b7-51b6-4c3c-939f-9a02b152c2d2"),
                            CartID = new Guid("c06fe51c-3286-4bd0-aa7f-230b38fcf3dc"),
                            Quantity = 2,
                            ShoeDetailsID = new Guid("03731fe6-1f33-4190-9706-00d66b343c3e")
                        },
                        new
                        {
                            ID = new Guid("ff5f0a86-c4fb-47c2-8094-37dde445e93a"),
                            CartID = new Guid("82e71c2d-8f10-4f7a-8bc8-d400638946ea"),
                            Quantity = 3,
                            ShoeDetailsID = new Guid("9900e677-eba1-4e94-9325-e2fc47fb3646")
                        },
                        new
                        {
                            ID = new Guid("8a48d7ed-df59-4bf5-ac94-cbc785b646f5"),
                            CartID = new Guid("66f3defb-f75c-4495-9054-ca51376a24a4"),
                            Quantity = 4,
                            ShoeDetailsID = new Guid("143a440a-14cd-440d-9940-313cb08c1765")
                        },
                        new
                        {
                            ID = new Guid("72ef1614-f324-4a13-a3c5-a2b4fdd07b63"),
                            CartID = new Guid("8fb14508-d80e-411c-9a65-c2a34a47757e"),
                            Quantity = 5,
                            ShoeDetailsID = new Guid("de60ebaf-4dfd-48f8-829c-224d5494eb19")
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Color", b =>
                {
                    b.Property<Guid>("ColorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ColorID");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            ColorID = new Guid("2102dc38-86a0-4304-958b-f060d553fb1f"),
                            ColorCode = "C1",
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5684),
                            Name = "Red",
                            Status = "Active"
                        },
                        new
                        {
                            ColorID = new Guid("da344fab-99ba-4fca-8b7b-0a08b5f71770"),
                            ColorCode = "C2",
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5689),
                            Name = "Blue",
                            Status = "Active"
                        },
                        new
                        {
                            ColorID = new Guid("1fd2b24d-e41f-47a3-bcbd-8a8e84566b4f"),
                            ColorCode = "C3",
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5691),
                            Name = "Green",
                            Status = "Active"
                        },
                        new
                        {
                            ColorID = new Guid("ce5ab5fc-0d26-47fd-b149-a03e6a504772"),
                            ColorCode = "C4",
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5692),
                            Name = "Yellow",
                            Status = "Active"
                        },
                        new
                        {
                            ColorID = new Guid("5ff4c3c2-38e4-42af-86ac-bd40bf99af11"),
                            ColorCode = "C5",
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5693),
                            Name = "Black",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Customer", b =>
                {
                    b.Property<Guid>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ResetPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = new Guid("cb140f0e-ab7d-4333-b3bb-3161162617e4"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5120),
                            Email = "customer1@example.com",
                            FullName = "Customer 1",
                            Password = "password",
                            PhoneNumber = "1234567890",
                            ResetPassword = "reset1",
                            Sex = "Male",
                            UserName = "customer1"
                        },
                        new
                        {
                            CustomerID = new Guid("6049ea20-2342-4932-a486-56d902ce8933"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5125),
                            Email = "customer2@example.com",
                            FullName = "Customer 2",
                            Password = "password",
                            PhoneNumber = "0987654321",
                            ResetPassword = "reset2",
                            Sex = "Female",
                            UserName = "customer2"
                        },
                        new
                        {
                            CustomerID = new Guid("290ad551-b4f3-40a8-b98e-009b83a2b98e"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5142),
                            Email = "customer3@example.com",
                            FullName = "Customer 3",
                            Password = "password",
                            PhoneNumber = "1231231234",
                            ResetPassword = "reset3",
                            Sex = "Male",
                            UserName = "customer3"
                        },
                        new
                        {
                            CustomerID = new Guid("868c7f27-cea0-47f3-88ec-a54e683468d8"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5144),
                            Email = "customer4@example.com",
                            FullName = "Customer 4",
                            Password = "password",
                            PhoneNumber = "4321432143",
                            ResetPassword = "reset4",
                            Sex = "Female",
                            UserName = "customer4"
                        },
                        new
                        {
                            CustomerID = new Guid("35efaa4b-4c57-441a-b6b1-06010cc7dbd6"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5146),
                            Email = "customer5@example.com",
                            FullName = "Customer 5",
                            Password = "password",
                            PhoneNumber = "6789678967",
                            ResetPassword = "reset5",
                            Sex = "Male",
                            UserName = "customer5"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Employee", b =>
                {
                    b.Property<Guid>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IdentificationCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeID");

                    b.HasIndex("RoleID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeID = new Guid("2b06fe95-4032-44e0-93e3-3310e0a7596d"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5351),
                            Email = "employee1@example.com",
                            FullName = "Employee 1",
                            IdentificationCode = "ID1",
                            Image = "img1.png",
                            Password = "password",
                            PhoneNumber = "1234567890",
                            RoleID = new Guid("92b357de-e84a-4961-b62e-5df1fef5d481"),
                            Sex = "Male",
                            Status = "Active",
                            UserName = "employee1"
                        },
                        new
                        {
                            EmployeeID = new Guid("acf34b5d-d435-40d1-a119-b53034fdd4ac"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5355),
                            Email = "employee2@example.com",
                            FullName = "Employee 2",
                            IdentificationCode = "ID2",
                            Image = "img2.png",
                            Password = "password",
                            PhoneNumber = "0987654321",
                            RoleID = new Guid("5d8ef21d-c732-4920-9cfa-22a1289b3bb9"),
                            Sex = "Female",
                            Status = "Active",
                            UserName = "employee2"
                        },
                        new
                        {
                            EmployeeID = new Guid("cefe6724-b3d9-4db2-9caf-d74d7a5c434a"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5358),
                            Email = "employee3@example.com",
                            FullName = "Employee 3",
                            IdentificationCode = "ID3",
                            Image = "img3.png",
                            Password = "password",
                            PhoneNumber = "1231231234",
                            RoleID = new Guid("d7adfbee-5be4-4093-9541-c490a98e3547"),
                            Sex = "Male",
                            Status = "Active",
                            UserName = "employee3"
                        },
                        new
                        {
                            EmployeeID = new Guid("37315b88-fc43-4cf8-ada9-03988a1d84bb"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5363),
                            Email = "employee4@example.com",
                            FullName = "Employee 4",
                            IdentificationCode = "ID4",
                            Image = "img4.png",
                            Password = "password",
                            PhoneNumber = "4321432143",
                            RoleID = new Guid("0e3a17b7-fb08-4030-9400-c8aa384e1911"),
                            Sex = "Female",
                            Status = "Active",
                            UserName = "employee4"
                        },
                        new
                        {
                            EmployeeID = new Guid("fc663b04-a869-4a29-800c-e1dd0ca849ea"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5365),
                            Email = "employee5@example.com",
                            FullName = "Employee 5",
                            IdentificationCode = "ID5",
                            Image = "img5.png",
                            Password = "password",
                            PhoneNumber = "6789678967",
                            RoleID = new Guid("db21b95e-e57b-44c9-a75d-cc64b7f6a15b"),
                            Sex = "Male",
                            Status = "Active",
                            UserName = "employee5"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Image", b =>
                {
                    b.Property<Guid>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ImageUrl1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl2")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl3")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl4")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ImageID");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ImageID = new Guid("c3875613-4f6b-415e-aaf3-7216d04eb7dc"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5826),
                            ImageCode = "IMG1",
                            ImageUrl1 = "https://example.com/img1_1.jpg",
                            ImageUrl2 = "https://example.com/img1_2.jpg",
                            ImageUrl3 = "https://example.com/img1_3.jpg",
                            ImageUrl4 = "https://example.com/img1_4.jpg",
                            Name = "Image 1",
                            Status = "Active"
                        },
                        new
                        {
                            ImageID = new Guid("35afc63c-456d-4456-865d-c4b1ec9b982c"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5830),
                            ImageCode = "IMG2",
                            ImageUrl1 = "https://example.com/img2_1.jpg",
                            ImageUrl2 = "https://example.com/img2_2.jpg",
                            ImageUrl3 = "https://example.com/img2_3.jpg",
                            ImageUrl4 = "https://example.com/img2_4.jpg",
                            Name = "Image 2",
                            Status = "Active"
                        },
                        new
                        {
                            ImageID = new Guid("0e3ab3fc-4aa6-4e64-8aa0-fda128e4aca6"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5833),
                            ImageCode = "IMG3",
                            ImageUrl1 = "https://example.com/img3_1.jpg",
                            ImageUrl2 = "https://example.com/img3_2.jpg",
                            ImageUrl3 = "https://example.com/img3_3.jpg",
                            ImageUrl4 = "https://example.com/img3_4.jpg",
                            Name = "Image 3",
                            Status = "Active"
                        },
                        new
                        {
                            ImageID = new Guid("5239fcbe-5162-44c9-a467-0627a1d145e5"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5835),
                            ImageCode = "IMG4",
                            ImageUrl1 = "https://example.com/img4_1.jpg",
                            ImageUrl2 = "https://example.com/img4_2.jpg",
                            ImageUrl3 = "https://example.com/img4_3.jpg",
                            ImageUrl4 = "https://example.com/img4_4.jpg",
                            Name = "Image 4",
                            Status = "Active"
                        },
                        new
                        {
                            ImageID = new Guid("9eef0615-97b7-4fbe-8d19-14f7f3f9b946"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5837),
                            ImageCode = "IMG5",
                            ImageUrl1 = "https://example.com/img5_1.jpg",
                            ImageUrl2 = "https://example.com/img5_2.jpg",
                            ImageUrl3 = "https://example.com/img5_3.jpg",
                            ImageUrl4 = "https://example.com/img5_4.jpg",
                            Name = "Image 5",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Material", b =>
                {
                    b.Property<Guid>("MaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaterialID");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            MaterialID = new Guid("c0052c43-e369-46e5-9fc7-2f95cd573cd1"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5770),
                            MaterialCode = "M1",
                            Name = "Leather",
                            Status = "Active"
                        },
                        new
                        {
                            MaterialID = new Guid("0dbab80b-bf2e-47eb-9c45-8a8a7f4eb527"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5773),
                            MaterialCode = "M2",
                            Name = "Suede",
                            Status = "Active"
                        },
                        new
                        {
                            MaterialID = new Guid("aa369c90-f3ed-479b-b1bd-77082dd3ab1a"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5774),
                            MaterialCode = "M3",
                            Name = "Canvas",
                            Status = "Active"
                        },
                        new
                        {
                            MaterialID = new Guid("666215ec-2ec1-4220-98d9-e01c693b4137"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5776),
                            MaterialCode = "M4",
                            Name = "Synthetic",
                            Status = "Active"
                        },
                        new
                        {
                            MaterialID = new Guid("387b8741-c25e-4b1d-ab1e-2c885c4ca0c3"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5779),
                            MaterialCode = "M5",
                            Name = "Rubber",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Product", b =>
                {
                    b.Property<Guid>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = new Guid("c1e19990-1dc9-4b7d-aac7-1eff0c1fa4f9"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5801),
                            Name = "Running Shoes",
                            ProductCode = "P1",
                            Status = "Active"
                        },
                        new
                        {
                            ProductID = new Guid("6fa047f4-51f1-4d53-b9cd-3e665a23fe55"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5803),
                            Name = "Sneakers",
                            ProductCode = "P2",
                            Status = "Active"
                        },
                        new
                        {
                            ProductID = new Guid("42e5ad39-21a1-4950-ac43-2b979cd7d210"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5805),
                            Name = "Boots",
                            ProductCode = "P3",
                            Status = "Active"
                        },
                        new
                        {
                            ProductID = new Guid("5adf4aa0-5810-40ea-80b5-533bf0e532f5"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5806),
                            Name = "Sandals",
                            ProductCode = "P4",
                            Status = "Active"
                        },
                        new
                        {
                            ProductID = new Guid("108ca0af-5df7-4236-8858-38c3f7e6b385"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5807),
                            Name = "Formal Shoes",
                            ProductCode = "P5",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.PurchaseMethod", b =>
                {
                    b.Property<Guid>("PurchaseMethodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PurchaseMethodID");

                    b.ToTable("PurchaseMethods");

                    b.HasData(
                        new
                        {
                            PurchaseMethodID = new Guid("490d16d6-73b8-48ca-aacc-0d5935e4a58f"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5480),
                            Name = "Credit Card",
                            Status = "Active"
                        },
                        new
                        {
                            PurchaseMethodID = new Guid("27c2138c-4bc7-4be3-bbba-bfa585238757"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5485),
                            Name = "PayPal",
                            Status = "Active"
                        },
                        new
                        {
                            PurchaseMethodID = new Guid("1d6d14ce-e882-44cc-b662-9c2aa7d541b5"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5486),
                            Name = "Cash",
                            Status = "Active"
                        },
                        new
                        {
                            PurchaseMethodID = new Guid("4af1b393-50b1-45d2-85f9-c9bcba777f36"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5487),
                            Name = "Bank Transfer",
                            Status = "Active"
                        },
                        new
                        {
                            PurchaseMethodID = new Guid("d267ff42-a8cc-44d9-ad29-284cc7b5b3a2"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5489),
                            Name = "Cryptocurrency",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Role", b =>
                {
                    b.Property<Guid>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = new Guid("92b357de-e84a-4961-b62e-5df1fef5d481"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5325),
                            RoleCode = "R1",
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleID = new Guid("5d8ef21d-c732-4920-9cfa-22a1289b3bb9"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5328),
                            RoleCode = "R2",
                            RoleName = "User"
                        },
                        new
                        {
                            RoleID = new Guid("d7adfbee-5be4-4093-9541-c490a98e3547"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5329),
                            RoleCode = "R3",
                            RoleName = "Manager"
                        },
                        new
                        {
                            RoleID = new Guid("0e3a17b7-fb08-4030-9400-c8aa384e1911"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5330),
                            RoleCode = "R4",
                            RoleName = "Support"
                        },
                        new
                        {
                            RoleID = new Guid("db21b95e-e57b-44c9-a75d-cc64b7f6a15b"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5332),
                            RoleCode = "R5",
                            RoleName = "Guest"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Sex", b =>
                {
                    b.Property<Guid>("SexID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SexName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("SexID");

                    b.ToTable("Sexes");

                    b.HasData(
                        new
                        {
                            SexID = new Guid("5a542352-5e49-45b7-81bd-414afad23efc"),
                            SexName = "Male"
                        },
                        new
                        {
                            SexID = new Guid("fd4f6c06-defc-46f6-b1ee-34c028effb9d"),
                            SexName = "Female"
                        },
                        new
                        {
                            SexID = new Guid("44adb848-ee4c-472a-afe8-f60f5ce479b0"),
                            SexName = "Unisex"
                        },
                        new
                        {
                            SexID = new Guid("d2491469-55db-4736-bca9-a556942839e2"),
                            SexName = "Kids"
                        },
                        new
                        {
                            SexID = new Guid("fe9ec233-fdc8-4c9b-a099-d42cf179eb43"),
                            SexName = "Others"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.ShoesDetails", b =>
                {
                    b.Property<Guid>("ShoesDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ColorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ImageID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ImportPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("MaterialID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SexID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShoesDetailsCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("StyleID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ShoesDetailsID");

                    b.HasIndex("ColorID");

                    b.HasIndex("ImageID");

                    b.HasIndex("MaterialID");

                    b.HasIndex("ProductID");

                    b.HasIndex("SexID");

                    b.HasIndex("StyleID");

                    b.ToTable("ShoesDetails");

                    b.HasData(
                        new
                        {
                            ShoesDetailsID = new Guid("7549d945-06c1-44e1-9fd9-009df7d4d81b"),
                            ColorID = new Guid("2102dc38-86a0-4304-958b-f060d553fb1f"),
                            Description = "Running Shoes",
                            ImageID = new Guid("c3875613-4f6b-415e-aaf3-7216d04eb7dc"),
                            ImportPrice = 800m,
                            MaterialID = new Guid("c0052c43-e369-46e5-9fc7-2f95cd573cd1"),
                            Price = 1000m,
                            ProductID = new Guid("c1e19990-1dc9-4b7d-aac7-1eff0c1fa4f9"),
                            SexID = new Guid("5a542352-5e49-45b7-81bd-414afad23efc"),
                            ShoesDetailsCode = "SD1",
                            Status = "Active",
                            StyleID = new Guid("3f0a9db1-b329-480d-9761-8755f373f2a4")
                        },
                        new
                        {
                            ShoesDetailsID = new Guid("03731fe6-1f33-4190-9706-00d66b343c3e"),
                            ColorID = new Guid("da344fab-99ba-4fca-8b7b-0a08b5f71770"),
                            Description = "Sneakers",
                            ImageID = new Guid("35afc63c-456d-4456-865d-c4b1ec9b982c"),
                            ImportPrice = 1600m,
                            MaterialID = new Guid("0dbab80b-bf2e-47eb-9c45-8a8a7f4eb527"),
                            Price = 2000m,
                            ProductID = new Guid("6fa047f4-51f1-4d53-b9cd-3e665a23fe55"),
                            SexID = new Guid("fd4f6c06-defc-46f6-b1ee-34c028effb9d"),
                            ShoesDetailsCode = "SD2",
                            Status = "Active",
                            StyleID = new Guid("72242a66-8df2-4a44-a744-845032308c04")
                        },
                        new
                        {
                            ShoesDetailsID = new Guid("9900e677-eba1-4e94-9325-e2fc47fb3646"),
                            ColorID = new Guid("1fd2b24d-e41f-47a3-bcbd-8a8e84566b4f"),
                            Description = "Boots",
                            ImageID = new Guid("0e3ab3fc-4aa6-4e64-8aa0-fda128e4aca6"),
                            ImportPrice = 2400m,
                            MaterialID = new Guid("aa369c90-f3ed-479b-b1bd-77082dd3ab1a"),
                            Price = 3000m,
                            ProductID = new Guid("42e5ad39-21a1-4950-ac43-2b979cd7d210"),
                            SexID = new Guid("44adb848-ee4c-472a-afe8-f60f5ce479b0"),
                            ShoesDetailsCode = "SD3",
                            Status = "Active",
                            StyleID = new Guid("257c60d0-68a2-4847-b272-95877f78d51e")
                        },
                        new
                        {
                            ShoesDetailsID = new Guid("143a440a-14cd-440d-9940-313cb08c1765"),
                            ColorID = new Guid("ce5ab5fc-0d26-47fd-b149-a03e6a504772"),
                            Description = "Sandals",
                            ImageID = new Guid("5239fcbe-5162-44c9-a467-0627a1d145e5"),
                            ImportPrice = 3200m,
                            MaterialID = new Guid("666215ec-2ec1-4220-98d9-e01c693b4137"),
                            Price = 4000m,
                            ProductID = new Guid("5adf4aa0-5810-40ea-80b5-533bf0e532f5"),
                            SexID = new Guid("d2491469-55db-4736-bca9-a556942839e2"),
                            ShoesDetailsCode = "SD4",
                            Status = "Active",
                            StyleID = new Guid("8a4976cc-33df-4f09-bb85-6996196584a8")
                        },
                        new
                        {
                            ShoesDetailsID = new Guid("de60ebaf-4dfd-48f8-829c-224d5494eb19"),
                            ColorID = new Guid("5ff4c3c2-38e4-42af-86ac-bd40bf99af11"),
                            Description = "Formal Shoes",
                            ImageID = new Guid("9eef0615-97b7-4fbe-8d19-14f7f3f9b946"),
                            ImportPrice = 4000m,
                            MaterialID = new Guid("387b8741-c25e-4b1d-ab1e-2c885c4ca0c3"),
                            Price = 5000m,
                            ProductID = new Guid("108ca0af-5df7-4236-8858-38c3f7e6b385"),
                            SexID = new Guid("fe9ec233-fdc8-4c9b-a099-d42cf179eb43"),
                            ShoesDetailsCode = "SD5",
                            Status = "Active",
                            StyleID = new Guid("5bfbb201-4ad9-45fe-b589-146ba6c936f9")
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.ShoesDetails_Size", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("ShoesDetailsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SizeID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ShoesDetailsID");

                    b.HasIndex("SizeID");

                    b.ToTable("ShoesDetails_Sizes");

                    b.HasData(
                        new
                        {
                            ID = new Guid("c5ce4aaf-83ee-4371-b4e2-93b02f1cfaa6"),
                            Quantity = 10,
                            ShoesDetailsID = new Guid("7549d945-06c1-44e1-9fd9-009df7d4d81b"),
                            SizeID = new Guid("1b9db785-018c-4db2-9fe6-e6ffc032af75")
                        },
                        new
                        {
                            ID = new Guid("5ed45046-8532-4312-a902-b4afcbe9f4c1"),
                            Quantity = 20,
                            ShoesDetailsID = new Guid("03731fe6-1f33-4190-9706-00d66b343c3e"),
                            SizeID = new Guid("58209b20-61b5-48f6-a580-24d6a501c09c")
                        },
                        new
                        {
                            ID = new Guid("20659f4b-4e3f-46d0-b821-9b16e9e2e427"),
                            Quantity = 30,
                            ShoesDetailsID = new Guid("9900e677-eba1-4e94-9325-e2fc47fb3646"),
                            SizeID = new Guid("e3f1ecc4-c80d-4e28-ad6b-d2c35d4b1446")
                        },
                        new
                        {
                            ID = new Guid("759ae7df-f8f4-4d00-8e28-3e6949d3d2e9"),
                            Quantity = 40,
                            ShoesDetailsID = new Guid("143a440a-14cd-440d-9940-313cb08c1765"),
                            SizeID = new Guid("5c205a73-0505-4ae8-8397-d62d5388f8cb")
                        },
                        new
                        {
                            ID = new Guid("6865902a-2727-410f-9a86-64a36ab2d85b"),
                            Quantity = 50,
                            ShoesDetailsID = new Guid("de60ebaf-4dfd-48f8-829c-224d5494eb19"),
                            SizeID = new Guid("ef466da0-5364-41b7-a9ad-99f5b4f66abd")
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Size", b =>
                {
                    b.Property<Guid>("SizeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SizeCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SizeID");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            SizeID = new Guid("1b9db785-018c-4db2-9fe6-e6ffc032af75"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5657),
                            Name = "Size 1",
                            SizeCode = "S1",
                            Status = "Active"
                        },
                        new
                        {
                            SizeID = new Guid("58209b20-61b5-48f6-a580-24d6a501c09c"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5660),
                            Name = "Size 2",
                            SizeCode = "S2",
                            Status = "Active"
                        },
                        new
                        {
                            SizeID = new Guid("e3f1ecc4-c80d-4e28-ad6b-d2c35d4b1446"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5661),
                            Name = "Size 3",
                            SizeCode = "S3",
                            Status = "Active"
                        },
                        new
                        {
                            SizeID = new Guid("5c205a73-0505-4ae8-8397-d62d5388f8cb"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5662),
                            Name = "Size 4",
                            SizeCode = "S4",
                            Status = "Active"
                        },
                        new
                        {
                            SizeID = new Guid("ef466da0-5364-41b7-a9ad-99f5b4f66abd"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5664),
                            Name = "Size 5",
                            SizeCode = "S5",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Style", b =>
                {
                    b.Property<Guid>("StyleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("StyleCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("StyleID");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            StyleID = new Guid("3f0a9db1-b329-480d-9761-8755f373f2a4"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5885),
                            Name = "Casual",
                            Status = "Active",
                            StyleCode = "ST1"
                        },
                        new
                        {
                            StyleID = new Guid("72242a66-8df2-4a44-a744-845032308c04"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5888),
                            Name = "Sport",
                            Status = "Active",
                            StyleCode = "ST2"
                        },
                        new
                        {
                            StyleID = new Guid("257c60d0-68a2-4847-b272-95877f78d51e"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5889),
                            Name = "Formal",
                            Status = "Active",
                            StyleCode = "ST3"
                        },
                        new
                        {
                            StyleID = new Guid("8a4976cc-33df-4f09-bb85-6996196584a8"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5891),
                            Name = "Outdoor",
                            Status = "Active",
                            StyleCode = "ST4"
                        },
                        new
                        {
                            StyleID = new Guid("5bfbb201-4ad9-45fe-b589-146ba6c936f9"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5892),
                            Name = "Work",
                            Status = "Active",
                            StyleCode = "ST5"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Voucher", b =>
                {
                    b.Property<Guid>("VoucherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MaxUsage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RemainingUsage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("bit");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<string>("VoucherCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("VoucherValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("VoucherID");

                    b.ToTable("Vouchers");

                    b.HasData(
                        new
                        {
                            VoucherID = new Guid("d29f9892-5580-4b13-aa4b-b4511739a13a"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5386),
                            ExpirationDate = new DateTime(2024, 6, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5386),
                            MaxUsage = 10m,
                            RemainingUsage = 5m,
                            Status = true,
                            Total = 1000,
                            VoucherCode = "VC1",
                            VoucherValue = 100m
                        },
                        new
                        {
                            VoucherID = new Guid("ba71900c-8c7c-4f36-b4d7-b58b791acc99"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5397),
                            ExpirationDate = new DateTime(2024, 6, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5397),
                            MaxUsage = 10m,
                            RemainingUsage = 4m,
                            Status = true,
                            Total = 1000,
                            VoucherCode = "VC2",
                            VoucherValue = 200m
                        },
                        new
                        {
                            VoucherID = new Guid("3046ae4a-4010-4f85-870d-d77ab5a9bb23"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5400),
                            ExpirationDate = new DateTime(2024, 6, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5400),
                            MaxUsage = 10m,
                            RemainingUsage = 3m,
                            Status = true,
                            Total = 1000,
                            VoucherCode = "VC3",
                            VoucherValue = 300m
                        },
                        new
                        {
                            VoucherID = new Guid("70b24ab2-a09a-4fd5-8ac2-38afdba3ea6c"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5403),
                            ExpirationDate = new DateTime(2024, 6, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5404),
                            MaxUsage = 10m,
                            RemainingUsage = 2m,
                            Status = true,
                            Total = 1000,
                            VoucherCode = "VC4",
                            VoucherValue = 400m
                        },
                        new
                        {
                            VoucherID = new Guid("abad49f9-7044-4f60-baff-004c53521fb7"),
                            DateCreated = new DateTime(2024, 5, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5447),
                            ExpirationDate = new DateTime(2024, 6, 30, 7, 42, 27, 534, DateTimeKind.Utc).AddTicks(5448),
                            MaxUsage = 10m,
                            RemainingUsage = 1m,
                            Status = true,
                            Total = 1000,
                            VoucherCode = "VC5",
                            VoucherValue = 500m
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Address", b =>
                {
                    b.HasOne("APP_DATA.Entity.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("APP_DATA.Entity.Bill", b =>
                {
                    b.HasOne("APP_DATA.Entity.Customer", "Customer")
                        .WithMany("Bills")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Employee", "Employee")
                        .WithMany("Bills")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.PurchaseMethod", "PurchaseMethod")
                        .WithMany("Bills")
                        .HasForeignKey("PurchaseMethodID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Voucher", "Voucher")
                        .WithMany("Bills")
                        .HasForeignKey("VoucherID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("PurchaseMethod");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("APP_DATA.Entity.BillDetails", b =>
                {
                    b.HasOne("APP_DATA.Entity.Bill", "Bill")
                        .WithMany("BillDetails")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("APP_DATA.Entity.BillStatusHistory", b =>
                {
                    b.HasOne("APP_DATA.Entity.Bill", "Bill")
                        .WithMany("BillStatusHistories")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("APP_DATA.Entity.Cart", b =>
                {
                    b.HasOne("APP_DATA.Entity.Customer", "Customer")
                        .WithOne("Carts")
                        .HasForeignKey("APP_DATA.Entity.Cart", "CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("APP_DATA.Entity.CartDetails", b =>
                {
                    b.HasOne("APP_DATA.Entity.Cart", "Cart")
                        .WithMany("CartDetails")
                        .HasForeignKey("CartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.ShoesDetails", "ShoesDetails")
                        .WithMany("CartDetails")
                        .HasForeignKey("ShoeDetailsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Employee", b =>
                {
                    b.HasOne("APP_DATA.Entity.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("APP_DATA.Entity.ShoesDetails", b =>
                {
                    b.HasOne("APP_DATA.Entity.Color", "Color")
                        .WithMany("ShoesDetails")
                        .HasForeignKey("ColorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Image", "Image")
                        .WithMany("ShoesDetails")
                        .HasForeignKey("ImageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Material", "Material")
                        .WithMany("ShoesDetails")
                        .HasForeignKey("MaterialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Product", "Product")
                        .WithMany("ShoesDetails")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Sex", "Sex")
                        .WithMany("ShoesDetails")
                        .HasForeignKey("SexID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Style", "Style")
                        .WithMany("ShoesDetails")
                        .HasForeignKey("StyleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Image");

                    b.Navigation("Material");

                    b.Navigation("Product");

                    b.Navigation("Sex");

                    b.Navigation("Style");
                });

            modelBuilder.Entity("APP_DATA.Entity.ShoesDetails_Size", b =>
                {
                    b.HasOne("APP_DATA.Entity.ShoesDetails", "ShoesDetails")
                        .WithMany()
                        .HasForeignKey("ShoesDetailsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Size", "Size")
                        .WithMany("ShoesDetails_Sizes")
                        .HasForeignKey("SizeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShoesDetails");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("APP_DATA.Entity.Bill", b =>
                {
                    b.Navigation("BillDetails");

                    b.Navigation("BillStatusHistories");
                });

            modelBuilder.Entity("APP_DATA.Entity.Cart", b =>
                {
                    b.Navigation("CartDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Color", b =>
                {
                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Bills");

                    b.Navigation("Carts")
                        .IsRequired();
                });

            modelBuilder.Entity("APP_DATA.Entity.Employee", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("APP_DATA.Entity.Image", b =>
                {
                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Material", b =>
                {
                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Product", b =>
                {
                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.PurchaseMethod", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("APP_DATA.Entity.Role", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("APP_DATA.Entity.Sex", b =>
                {
                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.ShoesDetails", b =>
                {
                    b.Navigation("CartDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Size", b =>
                {
                    b.Navigation("ShoesDetails_Sizes");
                });

            modelBuilder.Entity("APP_DATA.Entity.Style", b =>
                {
                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Voucher", b =>
                {
                    b.Navigation("Bills");
                });
#pragma warning restore 612, 618
        }
    }
}
