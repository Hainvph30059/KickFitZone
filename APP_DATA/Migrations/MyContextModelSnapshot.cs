// <auto-generated />
using System;
using APP_DATA.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APP_DATA.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("APP_DATA.Entity.Address", b =>
                {
                    b.Property<Guid>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Commune")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DistrictCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsDefaultAddress")
                        .HasColumnType("bit");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ShippingCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WardCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("AddressID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressID = new Guid("9b4e4820-7776-49d9-b157-d90b6daaf474"),
                            Commune = "Commune 1",
                            CustomerID = new Guid("c9231368-2924-4024-a211-e0264e49485f"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2422),
                            District = "District 1",
                            DistrictCode = "D1",
                            IsDefaultAddress = true,
                            Province = "Province 1",
                            ShippingCost = 10m,
                            Status = "Active",
                            Street = "Street 1",
                            WardCode = "W1"
                        },
                        new
                        {
                            AddressID = new Guid("f465847b-e4ed-4e4e-856c-370bc77b4425"),
                            Commune = "Commune 2",
                            CustomerID = new Guid("bef74dac-9337-444e-b4fc-ee76f35482ee"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2430),
                            District = "District 2",
                            DistrictCode = "D2",
                            IsDefaultAddress = false,
                            Province = "Province 2",
                            ShippingCost = 20m,
                            Status = "Active",
                            Street = "Street 2",
                            WardCode = "W2"
                        },
                        new
                        {
                            AddressID = new Guid("387d3dce-508c-4afb-b594-ddfd7e05c716"),
                            Commune = "Commune 3",
                            CustomerID = new Guid("d0b88215-17b1-4e2a-9a8e-b44fea3c9ba2"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2432),
                            District = "District 3",
                            DistrictCode = "D3",
                            IsDefaultAddress = true,
                            Province = "Province 3",
                            ShippingCost = 30m,
                            Status = "Active",
                            Street = "Street 3",
                            WardCode = "W3"
                        },
                        new
                        {
                            AddressID = new Guid("88b30c80-31e7-43bd-afdc-7d4041e3ddbe"),
                            Commune = "Commune 4",
                            CustomerID = new Guid("91e73ad1-fcd9-4f66-aabe-cec2a794a217"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2434),
                            District = "District 4",
                            DistrictCode = "D4",
                            IsDefaultAddress = false,
                            Province = "Province 4",
                            ShippingCost = 40m,
                            Status = "Active",
                            Street = "Street 4",
                            WardCode = "W4"
                        },
                        new
                        {
                            AddressID = new Guid("3218db13-6288-4ad5-a044-4f0619b080ed"),
                            Commune = "Commune 5",
                            CustomerID = new Guid("f5a02a83-4204-4a63-b5d0-a4c6f917037c"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2437),
                            District = "District 5",
                            DistrictCode = "D5",
                            IsDefaultAddress = true,
                            Province = "Province 5",
                            ShippingCost = 50m,
                            Status = "Active",
                            Street = "Street 5",
                            WardCode = "W5"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Bill", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BillCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CancelDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ConfirmationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentDay")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PurchaseMethodID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ShippingCosts")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("SuccessDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPriceAfterDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VoucherID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("PurchaseMethodID");

                    b.HasIndex("VoucherID");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            ID = new Guid("47aca5a4-c97b-4cff-99c3-713290d6dd1f"),
                            BillCode = "B1",
                            ConfirmationDate = new DateTime(2024, 6, 5, 2, 12, 33, 23, DateTimeKind.Utc).AddTicks(2651),
                            CustomerID = new Guid("c9231368-2924-4024-a211-e0264e49485f"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2642),
                            DeliveryDate = new DateTime(2024, 6, 7, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2649),
                            EmployeeID = new Guid("4a20b2c6-bcc3-4895-aaa6-e6b8722eef2a"),
                            IsPaid = true,
                            Note = "Note 1",
                            PaymentDay = new DateTime(2024, 6, 5, 4, 12, 33, 23, DateTimeKind.Utc).AddTicks(2652),
                            PurchaseMethodID = new Guid("63ffbd99-6114-4456-8d09-30e8e7da5da9"),
                            ShippingCosts = 50m,
                            Status = "Delivered",
                            SuccessDate = new DateTime(2024, 6, 6, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2643),
                            TotalPrice = 1000m,
                            TotalPriceAfterDiscount = 950m,
                            TransactionType = "Credit",
                            UpdateDate = new DateTime(2024, 6, 5, 3, 12, 33, 23, DateTimeKind.Utc).AddTicks(2651),
                            VoucherID = new Guid("760f291c-18fc-43e7-8003-76017c0b7443")
                        },
                        new
                        {
                            ID = new Guid("2c25177d-8288-47e3-b348-a729eb8b1f11"),
                            BillCode = "B2",
                            ConfirmationDate = new DateTime(2024, 6, 5, 2, 12, 33, 23, DateTimeKind.Utc).AddTicks(2659),
                            CustomerID = new Guid("bef74dac-9337-444e-b4fc-ee76f35482ee"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2657),
                            DeliveryDate = new DateTime(2024, 6, 7, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2658),
                            EmployeeID = new Guid("2927eaba-ba0c-45b2-bc94-b9dbee3ffc3d"),
                            IsPaid = true,
                            Note = "Note 2",
                            PaymentDay = new DateTime(2024, 6, 5, 4, 12, 33, 23, DateTimeKind.Utc).AddTicks(2661),
                            PurchaseMethodID = new Guid("d73a6430-cabd-467e-9823-9a5775d8cb90"),
                            ShippingCosts = 100m,
                            Status = "Delivered",
                            SuccessDate = new DateTime(2024, 6, 6, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2657),
                            TotalPrice = 2000m,
                            TotalPriceAfterDiscount = 1900m,
                            TransactionType = "Credit",
                            UpdateDate = new DateTime(2024, 6, 5, 3, 12, 33, 23, DateTimeKind.Utc).AddTicks(2661),
                            VoucherID = new Guid("a7fc6d1a-73a8-4ca7-8aef-700a7ae580c2")
                        },
                        new
                        {
                            ID = new Guid("a4fb7a9e-0d59-4f93-a464-a9e0ca867c7c"),
                            BillCode = "B3",
                            ConfirmationDate = new DateTime(2024, 6, 5, 2, 12, 33, 23, DateTimeKind.Utc).AddTicks(2736),
                            CustomerID = new Guid("d0b88215-17b1-4e2a-9a8e-b44fea3c9ba2"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2734),
                            DeliveryDate = new DateTime(2024, 6, 7, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2735),
                            EmployeeID = new Guid("ff0f6820-f98d-49e4-81b3-47dc433f4719"),
                            IsPaid = true,
                            Note = "Note 3",
                            PaymentDay = new DateTime(2024, 6, 5, 4, 12, 33, 23, DateTimeKind.Utc).AddTicks(2738),
                            PurchaseMethodID = new Guid("4c287058-da8f-4b22-ab4f-ef9de9a65ba3"),
                            ShippingCosts = 150m,
                            Status = "Delivered",
                            SuccessDate = new DateTime(2024, 6, 6, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2735),
                            TotalPrice = 3000m,
                            TotalPriceAfterDiscount = 2850m,
                            TransactionType = "Credit",
                            UpdateDate = new DateTime(2024, 6, 5, 3, 12, 33, 23, DateTimeKind.Utc).AddTicks(2737),
                            VoucherID = new Guid("ede269c5-9ec7-4fd8-b7ea-20ddd58a9c11")
                        },
                        new
                        {
                            ID = new Guid("07a4ba96-a8f1-4f6d-a90a-67121811a352"),
                            BillCode = "B4",
                            ConfirmationDate = new DateTime(2024, 6, 5, 2, 12, 33, 23, DateTimeKind.Utc).AddTicks(2743),
                            CustomerID = new Guid("91e73ad1-fcd9-4f66-aabe-cec2a794a217"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2741),
                            DeliveryDate = new DateTime(2024, 6, 7, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2742),
                            EmployeeID = new Guid("b5d6a8d3-cd61-474b-ac2b-4d3ebce0c3f6"),
                            IsPaid = true,
                            Note = "Note 4",
                            PaymentDay = new DateTime(2024, 6, 5, 4, 12, 33, 23, DateTimeKind.Utc).AddTicks(2744),
                            PurchaseMethodID = new Guid("ea6b6cf4-f70f-43eb-b16c-ee8af629a4e2"),
                            ShippingCosts = 200m,
                            Status = "Delivered",
                            SuccessDate = new DateTime(2024, 6, 6, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2741),
                            TotalPrice = 4000m,
                            TotalPriceAfterDiscount = 3800m,
                            TransactionType = "Credit",
                            UpdateDate = new DateTime(2024, 6, 5, 3, 12, 33, 23, DateTimeKind.Utc).AddTicks(2743),
                            VoucherID = new Guid("0beb4994-ad46-4538-aeda-84e458728137")
                        },
                        new
                        {
                            ID = new Guid("d8a7681a-1420-49af-b2e7-6d3f69a2016d"),
                            BillCode = "B5",
                            ConfirmationDate = new DateTime(2024, 6, 5, 2, 12, 33, 23, DateTimeKind.Utc).AddTicks(2750),
                            CustomerID = new Guid("f5a02a83-4204-4a63-b5d0-a4c6f917037c"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2749),
                            DeliveryDate = new DateTime(2024, 6, 7, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2749),
                            EmployeeID = new Guid("242f004a-6325-47a5-a199-c3ed7cfa1876"),
                            IsPaid = true,
                            Note = "Note 5",
                            PaymentDay = new DateTime(2024, 6, 5, 4, 12, 33, 23, DateTimeKind.Utc).AddTicks(2751),
                            PurchaseMethodID = new Guid("c535c31c-1667-4150-9101-d6ca1a7de1b2"),
                            ShippingCosts = 250m,
                            Status = "Delivered",
                            SuccessDate = new DateTime(2024, 6, 6, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2749),
                            TotalPrice = 5000m,
                            TotalPriceAfterDiscount = 4750m,
                            TransactionType = "Credit",
                            UpdateDate = new DateTime(2024, 6, 5, 3, 12, 33, 23, DateTimeKind.Utc).AddTicks(2751),
                            VoucherID = new Guid("7c3cd40e-aca2-4606-b986-634c317ac3c2")
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.BillDetails", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("ShoesDetails_SizeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("BillID");

                    b.ToTable("BillDetails");

                    b.HasData(
                        new
                        {
                            ID = new Guid("7b114f79-adce-4d33-a5e3-d356afd76735"),
                            BillID = new Guid("47aca5a4-c97b-4cff-99c3-713290d6dd1f"),
                            Price = 1000m,
                            Quantity = 1,
                            ShoesDetails_SizeID = new Guid("5dec446d-6b9b-4a7e-894b-1191fde5ecf5"),
                            Status = "Delivered"
                        },
                        new
                        {
                            ID = new Guid("2942f63e-dd04-434c-9446-2e03d8f0c82f"),
                            BillID = new Guid("2c25177d-8288-47e3-b348-a729eb8b1f11"),
                            Price = 2000m,
                            Quantity = 2,
                            ShoesDetails_SizeID = new Guid("4da57313-abe4-41cb-ab44-d56293fc16ce"),
                            Status = "Delivered"
                        },
                        new
                        {
                            ID = new Guid("bfc5c581-8825-4ca1-912e-abf06146e990"),
                            BillID = new Guid("a4fb7a9e-0d59-4f93-a464-a9e0ca867c7c"),
                            Price = 3000m,
                            Quantity = 3,
                            ShoesDetails_SizeID = new Guid("1d7bd185-36db-4081-a1ef-7bd592ad05be"),
                            Status = "Delivered"
                        },
                        new
                        {
                            ID = new Guid("c5f25db5-09d2-4e21-8f51-1193d134cc91"),
                            BillID = new Guid("07a4ba96-a8f1-4f6d-a90a-67121811a352"),
                            Price = 4000m,
                            Quantity = 4,
                            ShoesDetails_SizeID = new Guid("0eddb26e-242a-4df0-89b9-b9f6195f6179"),
                            Status = "Delivered"
                        },
                        new
                        {
                            ID = new Guid("4a0e2b02-5283-4746-a006-ae17c4312a1c"),
                            BillID = new Guid("d8a7681a-1420-49af-b2e7-6d3f69a2016d"),
                            Price = 5000m,
                            Quantity = 5,
                            ShoesDetails_SizeID = new Guid("1a5c94b1-2935-4920-baed-493a8bf550c5"),
                            Status = "Delivered"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.BillStatusHistory", b =>
                {
                    b.Property<Guid>("BillStatusHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BillStatusHistoryID");

                    b.HasIndex("BillID");

                    b.ToTable("BillStatusHistories");

                    b.HasData(
                        new
                        {
                            BillStatusHistoryID = new Guid("f02dfc74-99b5-447f-b208-b1f8099d0d58"),
                            BillID = new Guid("47aca5a4-c97b-4cff-99c3-713290d6dd1f"),
                            ChangeDate = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2815),
                            Note = "Order placed",
                            Status = "Ordered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("4078401b-828d-4ee3-98f1-7d2926acd964"),
                            BillID = new Guid("47aca5a4-c97b-4cff-99c3-713290d6dd1f"),
                            ChangeDate = new DateTime(2024, 6, 5, 2, 12, 33, 23, DateTimeKind.Utc).AddTicks(2818),
                            Note = "Order shipped",
                            Status = "Shipped"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("2da005b3-14ac-4dd1-86ad-94f171d08ab5"),
                            BillID = new Guid("47aca5a4-c97b-4cff-99c3-713290d6dd1f"),
                            ChangeDate = new DateTime(2024, 6, 5, 3, 12, 33, 23, DateTimeKind.Utc).AddTicks(2821),
                            Note = "Order delivered",
                            Status = "Delivered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("22822d7b-4aa6-4597-a006-821792dcecc9"),
                            BillID = new Guid("2c25177d-8288-47e3-b348-a729eb8b1f11"),
                            ChangeDate = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2823),
                            Note = "Order placed",
                            Status = "Ordered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("7d95087a-f636-4c7b-928a-22dbd323ea2e"),
                            BillID = new Guid("2c25177d-8288-47e3-b348-a729eb8b1f11"),
                            ChangeDate = new DateTime(2024, 6, 5, 2, 12, 33, 23, DateTimeKind.Utc).AddTicks(2825),
                            Note = "Order shipped",
                            Status = "Shipped"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("6cf45ef2-840c-4065-9657-5c3c067f4ae4"),
                            BillID = new Guid("2c25177d-8288-47e3-b348-a729eb8b1f11"),
                            ChangeDate = new DateTime(2024, 6, 5, 3, 12, 33, 23, DateTimeKind.Utc).AddTicks(2829),
                            Note = "Order delivered",
                            Status = "Delivered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("ace05400-f24e-49a0-92fd-a1a5fdc35b71"),
                            BillID = new Guid("a4fb7a9e-0d59-4f93-a464-a9e0ca867c7c"),
                            ChangeDate = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2831),
                            Note = "Order placed",
                            Status = "Ordered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("0c8b7c6c-d1da-4602-bffd-f052d384313d"),
                            BillID = new Guid("a4fb7a9e-0d59-4f93-a464-a9e0ca867c7c"),
                            ChangeDate = new DateTime(2024, 6, 5, 2, 12, 33, 23, DateTimeKind.Utc).AddTicks(2832),
                            Note = "Order shipped",
                            Status = "Shipped"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("0dd5b086-5dd1-403b-93fb-55c7b8a8d9f6"),
                            BillID = new Guid("a4fb7a9e-0d59-4f93-a464-a9e0ca867c7c"),
                            ChangeDate = new DateTime(2024, 6, 5, 3, 12, 33, 23, DateTimeKind.Utc).AddTicks(2834),
                            Note = "Order delivered",
                            Status = "Delivered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("74d483e4-ad30-4dff-8ebb-d7bf958d936e"),
                            BillID = new Guid("07a4ba96-a8f1-4f6d-a90a-67121811a352"),
                            ChangeDate = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2836),
                            Note = "Order placed",
                            Status = "Ordered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("478d8a02-dd1c-4bed-ad81-0954a04765a3"),
                            BillID = new Guid("07a4ba96-a8f1-4f6d-a90a-67121811a352"),
                            ChangeDate = new DateTime(2024, 6, 5, 2, 12, 33, 23, DateTimeKind.Utc).AddTicks(2838),
                            Note = "Order shipped",
                            Status = "Shipped"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("5bf80213-2f98-4de1-b9a1-650f7b536ed2"),
                            BillID = new Guid("07a4ba96-a8f1-4f6d-a90a-67121811a352"),
                            ChangeDate = new DateTime(2024, 6, 5, 3, 12, 33, 23, DateTimeKind.Utc).AddTicks(2840),
                            Note = "Order delivered",
                            Status = "Delivered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("266c4728-1506-48e6-b159-602c95fce2a3"),
                            BillID = new Guid("d8a7681a-1420-49af-b2e7-6d3f69a2016d"),
                            ChangeDate = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2841),
                            Note = "Order placed",
                            Status = "Ordered"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("720e6e21-f472-44e8-8abd-eeadbefbfc01"),
                            BillID = new Guid("d8a7681a-1420-49af-b2e7-6d3f69a2016d"),
                            ChangeDate = new DateTime(2024, 6, 5, 2, 12, 33, 23, DateTimeKind.Utc).AddTicks(2845),
                            Note = "Order shipped",
                            Status = "Shipped"
                        },
                        new
                        {
                            BillStatusHistoryID = new Guid("acc7b7c8-d6a3-474a-a03d-69d7efce7f06"),
                            BillID = new Guid("d8a7681a-1420-49af-b2e7-6d3f69a2016d"),
                            ChangeDate = new DateTime(2024, 6, 5, 3, 12, 33, 23, DateTimeKind.Utc).AddTicks(2847),
                            Note = "Order delivered",
                            Status = "Delivered"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Cart", b =>
                {
                    b.Property<Guid>("CartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CartID");

                    b.HasIndex("CustomerID")
                        .IsUnique();

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            CartID = new Guid("1dc964cf-d7cb-45cd-8cda-49c6c8cb3dc8"),
                            CustomerID = new Guid("c9231368-2924-4024-a211-e0264e49485f")
                        },
                        new
                        {
                            CartID = new Guid("19a5f8e4-87aa-40d0-9dc3-2461ca8a0e0e"),
                            CustomerID = new Guid("bef74dac-9337-444e-b4fc-ee76f35482ee")
                        },
                        new
                        {
                            CartID = new Guid("124fa20b-01ad-49a9-bd10-ecfafedff1af"),
                            CustomerID = new Guid("d0b88215-17b1-4e2a-9a8e-b44fea3c9ba2")
                        },
                        new
                        {
                            CartID = new Guid("ade85f8e-85cc-4508-b66f-0c5f46135a9e"),
                            CustomerID = new Guid("91e73ad1-fcd9-4f66-aabe-cec2a794a217")
                        },
                        new
                        {
                            CartID = new Guid("5073baf0-3700-4449-a822-0e8a1274e295"),
                            CustomerID = new Guid("f5a02a83-4204-4a63-b5d0-a4c6f917037c")
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.CartDetails", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("ShoeDetailsID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("CartID");

                    b.HasIndex("ShoeDetailsID");

                    b.ToTable("CartDetails");

                    b.HasData(
                        new
                        {
                            ID = new Guid("fd695391-1bec-45f8-9568-70a9358488bd"),
                            CartID = new Guid("1dc964cf-d7cb-45cd-8cda-49c6c8cb3dc8"),
                            Quantity = 1,
                            ShoeDetailsID = new Guid("e4289651-e7dd-4ca4-885d-ea4db2a76b17")
                        },
                        new
                        {
                            ID = new Guid("39216fb8-7d44-487a-bf9f-f2733059245b"),
                            CartID = new Guid("19a5f8e4-87aa-40d0-9dc3-2461ca8a0e0e"),
                            Quantity = 2,
                            ShoeDetailsID = new Guid("410fc8bd-046e-4357-b81f-309d86d43292")
                        },
                        new
                        {
                            ID = new Guid("3270499a-40ad-4850-ab76-7a4baf98a59a"),
                            CartID = new Guid("124fa20b-01ad-49a9-bd10-ecfafedff1af"),
                            Quantity = 3,
                            ShoeDetailsID = new Guid("45a2e68d-b11e-424a-96fa-c015542509c4")
                        },
                        new
                        {
                            ID = new Guid("3233b48c-720f-4223-81f7-1fbdb795dca8"),
                            CartID = new Guid("ade85f8e-85cc-4508-b66f-0c5f46135a9e"),
                            Quantity = 4,
                            ShoeDetailsID = new Guid("31836984-3951-4408-8662-ba8e45a7c580")
                        },
                        new
                        {
                            ID = new Guid("07068c88-ae2d-4157-88f0-cbc2c35980c9"),
                            CartID = new Guid("5073baf0-3700-4449-a822-0e8a1274e295"),
                            Quantity = 5,
                            ShoeDetailsID = new Guid("06dd3e89-9c22-4e83-942c-e0f6530cb942")
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Color", b =>
                {
                    b.Property<Guid>("ColorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ColorID");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            ColorID = new Guid("366dd4cf-b080-41f6-9d5e-375ed311f93e"),
                            ColorCode = "C1",
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2898),
                            Name = "Red",
                            Status = "Active"
                        },
                        new
                        {
                            ColorID = new Guid("b394d6d0-0558-47ac-a6af-eb5d98c2b594"),
                            ColorCode = "C2",
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2904),
                            Name = "Blue",
                            Status = "Active"
                        },
                        new
                        {
                            ColorID = new Guid("edd6d947-d7fc-41f6-a2ec-eec2f4c743bc"),
                            ColorCode = "C3",
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2906),
                            Name = "Green",
                            Status = "Active"
                        },
                        new
                        {
                            ColorID = new Guid("bfc3354d-8945-4528-94d5-0870352dc9ac"),
                            ColorCode = "C4",
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2907),
                            Name = "Yellow",
                            Status = "Active"
                        },
                        new
                        {
                            ColorID = new Guid("96e9a776-f491-481f-85ee-c1e59517e3b1"),
                            ColorCode = "C5",
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2908),
                            Name = "Black",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Customer", b =>
                {
                    b.Property<Guid>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ResetPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = new Guid("c9231368-2924-4024-a211-e0264e49485f"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2271),
                            Email = "customer1@example.com",
                            FullName = "Customer 1",
                            Password = "password",
                            PhoneNumber = "1234567890",
                            ResetPassword = "reset1",
                            Sex = "Male",
                            UserName = "customer1"
                        },
                        new
                        {
                            CustomerID = new Guid("bef74dac-9337-444e-b4fc-ee76f35482ee"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2278),
                            Email = "customer2@example.com",
                            FullName = "Customer 2",
                            Password = "password",
                            PhoneNumber = "0987654321",
                            ResetPassword = "reset2",
                            Sex = "Female",
                            UserName = "customer2"
                        },
                        new
                        {
                            CustomerID = new Guid("d0b88215-17b1-4e2a-9a8e-b44fea3c9ba2"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2294),
                            Email = "customer3@example.com",
                            FullName = "Customer 3",
                            Password = "password",
                            PhoneNumber = "1231231234",
                            ResetPassword = "reset3",
                            Sex = "Male",
                            UserName = "customer3"
                        },
                        new
                        {
                            CustomerID = new Guid("91e73ad1-fcd9-4f66-aabe-cec2a794a217"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2296),
                            Email = "customer4@example.com",
                            FullName = "Customer 4",
                            Password = "password",
                            PhoneNumber = "4321432143",
                            ResetPassword = "reset4",
                            Sex = "Female",
                            UserName = "customer4"
                        },
                        new
                        {
                            CustomerID = new Guid("f5a02a83-4204-4a63-b5d0-a4c6f917037c"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2298),
                            Email = "customer5@example.com",
                            FullName = "Customer 5",
                            Password = "password",
                            PhoneNumber = "6789678967",
                            ResetPassword = "reset5",
                            Sex = "Male",
                            UserName = "customer5"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Employee", b =>
                {
                    b.Property<Guid>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IdentificationCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeID");

                    b.HasIndex("RoleID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeID = new Guid("4a20b2c6-bcc3-4895-aaa6-e6b8722eef2a"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2533),
                            Email = "employee1@example.com",
                            FullName = "Employee 1",
                            IdentificationCode = "ID1",
                            Image = "img1.png",
                            Password = "password",
                            PhoneNumber = "1234567890",
                            RoleID = new Guid("8454b86c-350e-4a64-80d2-1d29046edd74"),
                            Sex = "Male",
                            Status = "Active",
                            UserName = "employee1"
                        },
                        new
                        {
                            EmployeeID = new Guid("2927eaba-ba0c-45b2-bc94-b9dbee3ffc3d"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2537),
                            Email = "employee2@example.com",
                            FullName = "Employee 2",
                            IdentificationCode = "ID2",
                            Image = "img2.png",
                            Password = "password",
                            PhoneNumber = "0987654321",
                            RoleID = new Guid("83656ebf-cb23-40f1-b799-07f5c5ff2cd6"),
                            Sex = "Female",
                            Status = "Active",
                            UserName = "employee2"
                        },
                        new
                        {
                            EmployeeID = new Guid("ff0f6820-f98d-49e4-81b3-47dc433f4719"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2539),
                            Email = "employee3@example.com",
                            FullName = "Employee 3",
                            IdentificationCode = "ID3",
                            Image = "img3.png",
                            Password = "password",
                            PhoneNumber = "1231231234",
                            RoleID = new Guid("73c3b223-e3da-41fd-9fdd-c1ee936bd11c"),
                            Sex = "Male",
                            Status = "Active",
                            UserName = "employee3"
                        },
                        new
                        {
                            EmployeeID = new Guid("b5d6a8d3-cd61-474b-ac2b-4d3ebce0c3f6"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2544),
                            Email = "employee4@example.com",
                            FullName = "Employee 4",
                            IdentificationCode = "ID4",
                            Image = "img4.png",
                            Password = "password",
                            PhoneNumber = "4321432143",
                            RoleID = new Guid("b65ce917-48dc-4c0f-99c8-2173325e4875"),
                            Sex = "Female",
                            Status = "Active",
                            UserName = "employee4"
                        },
                        new
                        {
                            EmployeeID = new Guid("242f004a-6325-47a5-a199-c3ed7cfa1876"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2546),
                            Email = "employee5@example.com",
                            FullName = "Employee 5",
                            IdentificationCode = "ID5",
                            Image = "img5.png",
                            Password = "password",
                            PhoneNumber = "6789678967",
                            RoleID = new Guid("c7f110d9-6100-4746-8e43-0cf6a0a585cd"),
                            Sex = "Male",
                            Status = "Active",
                            UserName = "employee5"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Image", b =>
                {
                    b.Property<Guid>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ImageUrl1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl2")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl3")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl4")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ImageID");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ImageID = new Guid("fcbd3ee1-7502-4dec-9582-959d690caef2"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2980),
                            ImageCode = "IMG1",
                            ImageUrl1 = "https://example.com/img1_1.jpg",
                            ImageUrl2 = "https://example.com/img1_2.jpg",
                            ImageUrl3 = "https://example.com/img1_3.jpg",
                            ImageUrl4 = "https://example.com/img1_4.jpg",
                            Name = "Image 1",
                            Status = "Active"
                        },
                        new
                        {
                            ImageID = new Guid("873abab9-58e5-424a-ba7c-7d2fd36dd0aa"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(3024),
                            ImageCode = "IMG2",
                            ImageUrl1 = "https://example.com/img2_1.jpg",
                            ImageUrl2 = "https://example.com/img2_2.jpg",
                            ImageUrl3 = "https://example.com/img2_3.jpg",
                            ImageUrl4 = "https://example.com/img2_4.jpg",
                            Name = "Image 2",
                            Status = "Active"
                        },
                        new
                        {
                            ImageID = new Guid("d33ae07a-049a-4a2c-bd4e-aa1d475d1226"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(3028),
                            ImageCode = "IMG3",
                            ImageUrl1 = "https://example.com/img3_1.jpg",
                            ImageUrl2 = "https://example.com/img3_2.jpg",
                            ImageUrl3 = "https://example.com/img3_3.jpg",
                            ImageUrl4 = "https://example.com/img3_4.jpg",
                            Name = "Image 3",
                            Status = "Active"
                        },
                        new
                        {
                            ImageID = new Guid("b8ec9c22-6562-466a-952c-c4f011a47301"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(3029),
                            ImageCode = "IMG4",
                            ImageUrl1 = "https://example.com/img4_1.jpg",
                            ImageUrl2 = "https://example.com/img4_2.jpg",
                            ImageUrl3 = "https://example.com/img4_3.jpg",
                            ImageUrl4 = "https://example.com/img4_4.jpg",
                            Name = "Image 4",
                            Status = "Active"
                        },
                        new
                        {
                            ImageID = new Guid("deca544d-c83d-4983-9cf4-19101e3a6a90"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(3031),
                            ImageCode = "IMG5",
                            ImageUrl1 = "https://example.com/img5_1.jpg",
                            ImageUrl2 = "https://example.com/img5_2.jpg",
                            ImageUrl3 = "https://example.com/img5_3.jpg",
                            ImageUrl4 = "https://example.com/img5_4.jpg",
                            Name = "Image 5",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Material", b =>
                {
                    b.Property<Guid>("MaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaterialID");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            MaterialID = new Guid("55cbdc6e-4f0a-49e3-91ee-e250cdf42e0b"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2928),
                            MaterialCode = "M1",
                            Name = "Leather",
                            Status = "Active"
                        },
                        new
                        {
                            MaterialID = new Guid("7d16bcc6-a568-4ed0-8cb1-e387c068ad18"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2931),
                            MaterialCode = "M2",
                            Name = "Suede",
                            Status = "Active"
                        },
                        new
                        {
                            MaterialID = new Guid("61177342-4b17-40b4-9380-4db50753888c"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2932),
                            MaterialCode = "M3",
                            Name = "Canvas",
                            Status = "Active"
                        },
                        new
                        {
                            MaterialID = new Guid("d4ae2c71-1141-4b77-bb2a-0b084ed103d8"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2934),
                            MaterialCode = "M4",
                            Name = "Synthetic",
                            Status = "Active"
                        },
                        new
                        {
                            MaterialID = new Guid("f74a4cd7-0df1-4e39-8bfd-11bfc045feed"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2937),
                            MaterialCode = "M5",
                            Name = "Rubber",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Product", b =>
                {
                    b.Property<Guid>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = new Guid("8df85c27-5d9e-4f22-a5ca-127973a88470"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2955),
                            Name = "Running Shoes",
                            ProductCode = "P1",
                            Status = "Active"
                        },
                        new
                        {
                            ProductID = new Guid("43be6cc6-6906-438c-a7ef-5e8eaef18db5"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2958),
                            Name = "Sneakers",
                            ProductCode = "P2",
                            Status = "Active"
                        },
                        new
                        {
                            ProductID = new Guid("f7db9156-edd6-44da-8b0a-6c811bc423c3"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2960),
                            Name = "Boots",
                            ProductCode = "P3",
                            Status = "Active"
                        },
                        new
                        {
                            ProductID = new Guid("bef6e269-4f9d-4797-be82-3f3f180e6675"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2961),
                            Name = "Sandals",
                            ProductCode = "P4",
                            Status = "Active"
                        },
                        new
                        {
                            ProductID = new Guid("9df703c7-4ad9-4c54-ab8d-e1edf7de1265"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2962),
                            Name = "Formal Shoes",
                            ProductCode = "P5",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.PurchaseMethod", b =>
                {
                    b.Property<Guid>("PurchaseMethodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PurchaseMethodID");

                    b.ToTable("PurchaseMethods");

                    b.HasData(
                        new
                        {
                            PurchaseMethodID = new Guid("63ffbd99-6114-4456-8d09-30e8e7da5da9"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2611),
                            Name = "Credit Card",
                            Status = "Active"
                        },
                        new
                        {
                            PurchaseMethodID = new Guid("d73a6430-cabd-467e-9823-9a5775d8cb90"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2617),
                            Name = "PayPal",
                            Status = "Active"
                        },
                        new
                        {
                            PurchaseMethodID = new Guid("4c287058-da8f-4b22-ab4f-ef9de9a65ba3"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2619),
                            Name = "Cash",
                            Status = "Active"
                        },
                        new
                        {
                            PurchaseMethodID = new Guid("ea6b6cf4-f70f-43eb-b16c-ee8af629a4e2"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2620),
                            Name = "Bank Transfer",
                            Status = "Active"
                        },
                        new
                        {
                            PurchaseMethodID = new Guid("c535c31c-1667-4150-9101-d6ca1a7de1b2"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2621),
                            Name = "Cryptocurrency",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Role", b =>
                {
                    b.Property<Guid>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = new Guid("8454b86c-350e-4a64-80d2-1d29046edd74"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2504),
                            RoleCode = "R1",
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleID = new Guid("83656ebf-cb23-40f1-b799-07f5c5ff2cd6"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2507),
                            RoleCode = "R2",
                            RoleName = "User"
                        },
                        new
                        {
                            RoleID = new Guid("73c3b223-e3da-41fd-9fdd-c1ee936bd11c"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2509),
                            RoleCode = "R3",
                            RoleName = "Manager"
                        },
                        new
                        {
                            RoleID = new Guid("b65ce917-48dc-4c0f-99c8-2173325e4875"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2510),
                            RoleCode = "R4",
                            RoleName = "Support"
                        },
                        new
                        {
                            RoleID = new Guid("c7f110d9-6100-4746-8e43-0cf6a0a585cd"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2512),
                            RoleCode = "R5",
                            RoleName = "Guest"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Sex", b =>
                {
                    b.Property<Guid>("SexID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SexName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("SexID");

                    b.ToTable("Sexes");

                    b.HasData(
                        new
                        {
                            SexID = new Guid("eb5e5097-0e86-4fde-aee4-a44676ac0eac"),
                            SexName = "Male"
                        },
                        new
                        {
                            SexID = new Guid("cdd94718-8334-4b0d-9389-1aeff7cb636e"),
                            SexName = "Female"
                        },
                        new
                        {
                            SexID = new Guid("0bd6c9d8-f71a-45c7-bfc6-5b9de912d455"),
                            SexName = "Unisex"
                        },
                        new
                        {
                            SexID = new Guid("ee81a1ad-d4a7-4e16-bf27-203de5a36c04"),
                            SexName = "Kids"
                        },
                        new
                        {
                            SexID = new Guid("dba9292a-027a-4768-a8cc-ec3dba8a2730"),
                            SexName = "Others"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.ShoesDetails", b =>
                {
                    b.Property<Guid>("ShoesDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ColorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ImageID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaterialID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SexID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShoesDetailsCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("SizeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("StyleID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ShoesDetailsID");

                    b.HasIndex("ColorID");

                    b.HasIndex("ImageID");

                    b.HasIndex("MaterialID");

                    b.HasIndex("ProductID");

                    b.HasIndex("SexID");

                    b.HasIndex("SizeID");

                    b.HasIndex("StyleID");

                    b.ToTable("ShoesDetails");

                    b.HasData(
                        new
                        {
                            ShoesDetailsID = new Guid("e4289651-e7dd-4ca4-885d-ea4db2a76b17"),
                            ColorID = new Guid("366dd4cf-b080-41f6-9d5e-375ed311f93e"),
                            Description = "Running Shoes",
                            ImageID = new Guid("fcbd3ee1-7502-4dec-9582-959d690caef2"),
                            MaterialID = new Guid("55cbdc6e-4f0a-49e3-91ee-e250cdf42e0b"),
                            Price = 1000m,
                            ProductID = new Guid("8df85c27-5d9e-4f22-a5ca-127973a88470"),
                            SexID = new Guid("eb5e5097-0e86-4fde-aee4-a44676ac0eac"),
                            ShoesDetailsCode = "SD1",
                            SizeID = new Guid("7fe21232-1a38-4538-b40e-67fa9d32679f"),
                            Status = "Active",
                            StyleID = new Guid("02c60d54-e63c-454b-89ab-29c850d663da")
                        },
                        new
                        {
                            ShoesDetailsID = new Guid("410fc8bd-046e-4357-b81f-309d86d43292"),
                            ColorID = new Guid("b394d6d0-0558-47ac-a6af-eb5d98c2b594"),
                            Description = "Sneakers",
                            ImageID = new Guid("873abab9-58e5-424a-ba7c-7d2fd36dd0aa"),
                            MaterialID = new Guid("7d16bcc6-a568-4ed0-8cb1-e387c068ad18"),
                            Price = 2000m,
                            ProductID = new Guid("43be6cc6-6906-438c-a7ef-5e8eaef18db5"),
                            SexID = new Guid("cdd94718-8334-4b0d-9389-1aeff7cb636e"),
                            ShoesDetailsCode = "SD2",
                            SizeID = new Guid("7fe21232-1a38-4538-b40e-67fa9d32679f"),
                            Status = "Active",
                            StyleID = new Guid("8ab3d8aa-4aae-4084-8eda-876a03217485")
                        },
                        new
                        {
                            ShoesDetailsID = new Guid("45a2e68d-b11e-424a-96fa-c015542509c4"),
                            ColorID = new Guid("edd6d947-d7fc-41f6-a2ec-eec2f4c743bc"),
                            Description = "Boots",
                            ImageID = new Guid("d33ae07a-049a-4a2c-bd4e-aa1d475d1226"),
                            MaterialID = new Guid("61177342-4b17-40b4-9380-4db50753888c"),
                            Price = 3000m,
                            ProductID = new Guid("f7db9156-edd6-44da-8b0a-6c811bc423c3"),
                            SexID = new Guid("0bd6c9d8-f71a-45c7-bfc6-5b9de912d455"),
                            ShoesDetailsCode = "SD3",
                            SizeID = new Guid("7fe21232-1a38-4538-b40e-67fa9d32679f"),
                            Status = "Active",
                            StyleID = new Guid("90ea5bda-8368-42da-87be-341a43012742")
                        },
                        new
                        {
                            ShoesDetailsID = new Guid("31836984-3951-4408-8662-ba8e45a7c580"),
                            ColorID = new Guid("bfc3354d-8945-4528-94d5-0870352dc9ac"),
                            Description = "Sandals",
                            ImageID = new Guid("b8ec9c22-6562-466a-952c-c4f011a47301"),
                            MaterialID = new Guid("d4ae2c71-1141-4b77-bb2a-0b084ed103d8"),
                            Price = 4000m,
                            ProductID = new Guid("bef6e269-4f9d-4797-be82-3f3f180e6675"),
                            SexID = new Guid("ee81a1ad-d4a7-4e16-bf27-203de5a36c04"),
                            ShoesDetailsCode = "SD4",
                            SizeID = new Guid("7fe21232-1a38-4538-b40e-67fa9d32679f"),
                            Status = "Active",
                            StyleID = new Guid("21994e18-7740-45f3-88cb-c0be1d88365f")
                        },
                        new
                        {
                            ShoesDetailsID = new Guid("06dd3e89-9c22-4e83-942c-e0f6530cb942"),
                            ColorID = new Guid("96e9a776-f491-481f-85ee-c1e59517e3b1"),
                            Description = "Formal Shoes",
                            ImageID = new Guid("deca544d-c83d-4983-9cf4-19101e3a6a90"),
                            MaterialID = new Guid("f74a4cd7-0df1-4e39-8bfd-11bfc045feed"),
                            Price = 5000m,
                            ProductID = new Guid("9df703c7-4ad9-4c54-ab8d-e1edf7de1265"),
                            SexID = new Guid("dba9292a-027a-4768-a8cc-ec3dba8a2730"),
                            ShoesDetailsCode = "SD5",
                            SizeID = new Guid("7fe21232-1a38-4538-b40e-67fa9d32679f"),
                            Status = "Active",
                            StyleID = new Guid("a9554b2b-1442-481a-931d-8497e668a5fc")
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Size", b =>
                {
                    b.Property<Guid>("SizeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SizeCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SizeID");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            SizeID = new Guid("7fe21232-1a38-4538-b40e-67fa9d32679f"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2871),
                            Name = "Size 1",
                            SizeCode = "S1",
                            Status = "Active"
                        },
                        new
                        {
                            SizeID = new Guid("43ce3c11-3460-47c0-9d39-6eecc91df2d8"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2873),
                            Name = "Size 2",
                            SizeCode = "S2",
                            Status = "Active"
                        },
                        new
                        {
                            SizeID = new Guid("8d9396ea-e324-468c-8285-f3c3456db3a9"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2875),
                            Name = "Size 3",
                            SizeCode = "S3",
                            Status = "Active"
                        },
                        new
                        {
                            SizeID = new Guid("945d3a5d-2134-4795-830b-227d483d44a4"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2876),
                            Name = "Size 4",
                            SizeCode = "S4",
                            Status = "Active"
                        },
                        new
                        {
                            SizeID = new Guid("a575432e-143a-41c0-9cf8-f2bca64b2c07"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2878),
                            Name = "Size 5",
                            SizeCode = "S5",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Style", b =>
                {
                    b.Property<Guid>("StyleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("StyleCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("StyleID");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            StyleID = new Guid("02c60d54-e63c-454b-89ab-29c850d663da"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(3077),
                            Name = "Casual",
                            Status = "Active",
                            StyleCode = "ST1"
                        },
                        new
                        {
                            StyleID = new Guid("8ab3d8aa-4aae-4084-8eda-876a03217485"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(3080),
                            Name = "Sport",
                            Status = "Active",
                            StyleCode = "ST2"
                        },
                        new
                        {
                            StyleID = new Guid("90ea5bda-8368-42da-87be-341a43012742"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(3082),
                            Name = "Formal",
                            Status = "Active",
                            StyleCode = "ST3"
                        },
                        new
                        {
                            StyleID = new Guid("21994e18-7740-45f3-88cb-c0be1d88365f"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(3083),
                            Name = "Outdoor",
                            Status = "Active",
                            StyleCode = "ST4"
                        },
                        new
                        {
                            StyleID = new Guid("a9554b2b-1442-481a-931d-8497e668a5fc"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(3084),
                            Name = "Work",
                            Status = "Active",
                            StyleCode = "ST5"
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Voucher", b =>
                {
                    b.Property<Guid>("VoucherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MaxUsage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RemainingUsage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("bit");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<string>("VoucherCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("VoucherValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("VoucherID");

                    b.ToTable("Vouchers");

                    b.HasData(
                        new
                        {
                            VoucherID = new Guid("760f291c-18fc-43e7-8003-76017c0b7443"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2566),
                            ExpirationDate = new DateTime(2024, 7, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2566),
                            MaxUsage = 10m,
                            RemainingUsage = 5m,
                            Status = true,
                            Total = 1000,
                            VoucherCode = "VC1",
                            VoucherValue = 100m
                        },
                        new
                        {
                            VoucherID = new Guid("a7fc6d1a-73a8-4ca7-8aef-700a7ae580c2"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2575),
                            ExpirationDate = new DateTime(2024, 7, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2575),
                            MaxUsage = 10m,
                            RemainingUsage = 4m,
                            Status = true,
                            Total = 1000,
                            VoucherCode = "VC2",
                            VoucherValue = 200m
                        },
                        new
                        {
                            VoucherID = new Guid("ede269c5-9ec7-4fd8-b7ea-20ddd58a9c11"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2577),
                            ExpirationDate = new DateTime(2024, 7, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2578),
                            MaxUsage = 10m,
                            RemainingUsage = 3m,
                            Status = true,
                            Total = 1000,
                            VoucherCode = "VC3",
                            VoucherValue = 300m
                        },
                        new
                        {
                            VoucherID = new Guid("0beb4994-ad46-4538-aeda-84e458728137"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2580),
                            ExpirationDate = new DateTime(2024, 7, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2580),
                            MaxUsage = 10m,
                            RemainingUsage = 2m,
                            Status = true,
                            Total = 1000,
                            VoucherCode = "VC4",
                            VoucherValue = 400m
                        },
                        new
                        {
                            VoucherID = new Guid("7c3cd40e-aca2-4606-b986-634c317ac3c2"),
                            DateCreated = new DateTime(2024, 6, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2582),
                            ExpirationDate = new DateTime(2024, 7, 5, 1, 12, 33, 23, DateTimeKind.Utc).AddTicks(2582),
                            MaxUsage = 10m,
                            RemainingUsage = 1m,
                            Status = true,
                            Total = 1000,
                            VoucherCode = "VC5",
                            VoucherValue = 500m
                        });
                });

            modelBuilder.Entity("APP_DATA.Entity.Address", b =>
                {
                    b.HasOne("APP_DATA.Entity.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("APP_DATA.Entity.Bill", b =>
                {
                    b.HasOne("APP_DATA.Entity.Customer", "Customer")
                        .WithMany("Bills")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Employee", "Employee")
                        .WithMany("Bills")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.PurchaseMethod", "PurchaseMethod")
                        .WithMany("Bills")
                        .HasForeignKey("PurchaseMethodID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Voucher", "Voucher")
                        .WithMany("Bills")
                        .HasForeignKey("VoucherID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("PurchaseMethod");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("APP_DATA.Entity.BillDetails", b =>
                {
                    b.HasOne("APP_DATA.Entity.Bill", "Bill")
                        .WithMany("BillDetails")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("APP_DATA.Entity.BillStatusHistory", b =>
                {
                    b.HasOne("APP_DATA.Entity.Bill", "Bill")
                        .WithMany("BillStatusHistories")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("APP_DATA.Entity.Cart", b =>
                {
                    b.HasOne("APP_DATA.Entity.Customer", "Customer")
                        .WithOne("Carts")
                        .HasForeignKey("APP_DATA.Entity.Cart", "CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("APP_DATA.Entity.CartDetails", b =>
                {
                    b.HasOne("APP_DATA.Entity.Cart", "Cart")
                        .WithMany("CartDetails")
                        .HasForeignKey("CartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.ShoesDetails", "ShoesDetails")
                        .WithMany("CartDetails")
                        .HasForeignKey("ShoeDetailsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Employee", b =>
                {
                    b.HasOne("APP_DATA.Entity.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("APP_DATA.Entity.ShoesDetails", b =>
                {
                    b.HasOne("APP_DATA.Entity.Color", "Color")
                        .WithMany("ShoesDetails")
                        .HasForeignKey("ColorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Image", "Image")
                        .WithMany("ShoesDetails")
                        .HasForeignKey("ImageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Material", "Material")
                        .WithMany("ShoesDetails")
                        .HasForeignKey("MaterialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Product", "Product")
                        .WithMany("ShoesDetails")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Sex", "Sex")
                        .WithMany("ShoesDetails")
                        .HasForeignKey("SexID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Size", "Size")
                        .WithMany("ShoesDetails")
                        .HasForeignKey("SizeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_DATA.Entity.Style", "Style")
                        .WithMany("ShoesDetails")
                        .HasForeignKey("StyleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Image");

                    b.Navigation("Material");

                    b.Navigation("Product");

                    b.Navigation("Sex");

                    b.Navigation("Size");

                    b.Navigation("Style");
                });

            modelBuilder.Entity("APP_DATA.Entity.Bill", b =>
                {
                    b.Navigation("BillDetails");

                    b.Navigation("BillStatusHistories");
                });

            modelBuilder.Entity("APP_DATA.Entity.Cart", b =>
                {
                    b.Navigation("CartDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Color", b =>
                {
                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Bills");

                    b.Navigation("Carts")
                        .IsRequired();
                });

            modelBuilder.Entity("APP_DATA.Entity.Employee", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("APP_DATA.Entity.Image", b =>
                {
                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Material", b =>
                {
                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Product", b =>
                {
                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.PurchaseMethod", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("APP_DATA.Entity.Role", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("APP_DATA.Entity.Sex", b =>
                {
                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.ShoesDetails", b =>
                {
                    b.Navigation("CartDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Size", b =>
                {
                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Style", b =>
                {
                    b.Navigation("ShoesDetails");
                });

            modelBuilder.Entity("APP_DATA.Entity.Voucher", b =>
                {
                    b.Navigation("Bills");
                });
#pragma warning restore 612, 618
        }
    }
}
